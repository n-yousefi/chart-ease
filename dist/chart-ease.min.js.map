{"version":3,"file":"chart-ease.min.js","sources":["../site/js/chart-ease.js"],"sourcesContent":["(function () {\n  'use strict';\n\n  function normalize(arr, normalizeGroups) {\r\n    const normalizedArr = arr.map((item) => {\r\n      return { ...item };\r\n    });\r\n\r\n    const arrKeys = Object.keys(arr[0]);\r\n    normalizedArr.forEach((item) => {\r\n      normalizeGroups.forEach((group) => {\r\n        arrKeys.forEach((key) => {\r\n          if (group.cols.includes(key)) {\r\n            item[key] = Math.round(normalizeNumber(item[key], group));\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    return normalizedArr;\r\n  }\r\n\r\n  function normalizeNumber(num, group) {\r\n    return ((num - group.min) / (group.max - group.min)) * (group.stop - group.start) + group.start;\r\n  }\n\n  function copyAttrs(from, to) {\r\n    Array.from(from.attributes).forEach((attr) => {\r\n      if (attr.value) to.setAttribute(attr.name, attr.value);\r\n    });\r\n  }\n\n  function copyStyles(from, to) {\r\n    if (from.style.cssText) to.style.cssText = from.style.cssText;\r\n  }\n\n  function cloneSVGElement(element) {\r\n    const newElement = document.createElementNS(\r\n      \"http://www.w3.org/2000/svg\",\r\n      element.tagName.toLowerCase()\r\n    );\r\n    copyAttrs(element, newElement);\r\n    copyStyles(element, newElement);\r\n    const children = Array.from(element.children);\r\n    children.forEach((child) => {\r\n      newElement.appendChild(cloneSVGElement(child));\r\n    });\r\n    return newElement;\r\n  }\n\n  function createSVGElements(tagName) {\r\n    return document.createElementNS(\"http://www.w3.org/2000/svg\", tagName);\r\n  }\n\n  function flip(svg, shape) {\r\n    const { height } = svg.getBoundingClientRect();\r\n    if (shape.tagName.toLowerCase() == \"text\") {\r\n      shape.setAttribute(\"transform\", `scale(1,-1) translate(0, -${height})`);\r\n      shape.setAttribute(\"y\", height - parseFloat(shape.getAttribute(\"y\")));\r\n    }\r\n  }\n\n  function drawPoints(svg, pointTypes, data, originalData, ondraw) {\r\n    const g = createSVGElements(\"g\");\r\n    data.forEach((row, index) => {\r\n      pointTypes.forEach((pointType) => {\r\n        const shape = cloneSVGElement(pointType);\r\n        if (!ondraw) setDefaultPosition(shape, row.x, row.y);\r\n        else\r\n          ondraw({\r\n            shape,\r\n            row,\r\n            originalRow: originalData[index],\r\n            index,\r\n          });\r\n        g.appendChild(shape);\r\n        flip(svg, shape);\r\n      });\r\n    });\r\n    svg.appendChild(g);\r\n  }\r\n\r\n  function setDefaultPosition(shape, x, y) {\r\n    switch (shape.nodeName) {\r\n      case \"rect\":\r\n        if (x > 0) {\r\n          const width = Number(shape.getAttribute(\"width\"));\r\n          const adjustWidth = width > 0 ? x - width / 2 : x;\r\n          shape.setAttribute(\"x\", adjustWidth);\r\n        }\r\n        if (y > 0) {\r\n          const height = Number(shape.getAttribute(\"height\"));\r\n          const adjustHeight = height > 0 ? y - height / 2 : x;\r\n          shape.setAttribute(\"y\", adjustHeight);\r\n        }\r\n        break;\r\n      case \"circle\":\r\n      case \"ellipse\":\r\n        if (x > 0) shape.setAttribute(\"cx\", x);\r\n        if (y > 0) shape.setAttribute(\"cy\", y);\r\n      default:\r\n        if (x > 0) shape.setAttribute(\"x\", x);\r\n        if (y > 0) shape.setAttribute(\"y\", y);\r\n        break;\r\n    }\r\n  }\n\n  function drawPath(parent, pathType, data) {\r\n    if (!pathType) return;\r\n    const path = cloneSVGElement(pathType);\r\n    loadPathData(path, data);\r\n    parent.appendChild(path);\r\n  }\r\n\r\n  function loadPathData(path, data) {\r\n    path.setAttribute(\r\n      \"d\",\r\n      data\r\n        .map((point, index) => (index === 0 ? `M ${point.x} ${point.y}` : ` L ${point.x} ${point.y}`))\r\n        .join(\" \")\r\n    );\r\n    path.removeAttribute(\"is\");\r\n  }\n\n  function setGroupsMinMax(data, groups) {\r\n    groups.forEach((group) => {\r\n      if (group.min == undefined) group.min = getKeysMin(data, group.cols);\r\n      if (group.max == undefined) group.max = getKeysMax(data, group.cols);\r\n    });\r\n  }\r\n\r\n  function getKeysMin(data, keys) {\r\n    let min = Number.MAX_VALUE;\r\n    for (let i = 1; i < data.length; i++) {\r\n      for (let j = 0; j < keys.length; j++) {\r\n        const keyMin = getKeyMin(data, keys[j]);\r\n        if (min > keyMin) min = keyMin;\r\n      }\r\n    }\r\n    return min;\r\n  }\r\n\r\n  function getKeysMax(data, keys) {\r\n    let max = Number.MIN_VALUE;\r\n    for (let i = 1; i < data.length; i++) {\r\n      for (let j = 0; j < keys.length; j++) {\r\n        const keyMax = getKeyMax(data, keys[j]);\r\n        if (keyMax > max) max = keyMax;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  function getKeyMin(data, key) {\r\n    let min = data[0][key];\r\n    for (let i = 1; i < data.length; i++) {\r\n      min = Math.min(min, data[i][key]);\r\n    }\r\n    return min;\r\n  }\r\n\r\n  function getKeyMax(data, key) {\r\n    let max = data[0][key];\r\n    for (let i = 1; i < data.length; i++) {\r\n      max = Math.max(max, data[i][key]);\r\n    }\r\n    return max;\r\n  }\n\n  class DataSet extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n\r\n    set data(originalData) {\r\n      const normalizeGroups = this.getNormalizeGroups();\r\n      setGroupsMinMax(originalData, normalizeGroups);\r\n      if (this[\"ondataSet\"]) this[\"ondataSet\"]();\r\n      const data = normalize(originalData, normalizeGroups);\r\n      const svg = this.parentElement.querySelector(\"svg\");\r\n      drawPath(svg, this.pathType, data);\r\n      drawPoints(svg, this.pointTypes, data, originalData, this[\"ondraw\"]);\r\n      this.parentElement.removeChild(this);\r\n    }\r\n\r\n    getNormalizeGroups() {\r\n      const margin = this.parentElement.margin;\r\n      const h = {\r\n        cols: this.getAttribute(\"hAxis\") ? this.getAttribute(\"hAxis\").split(\",\") : [\"x\"],\r\n        start: margin.bottom,\r\n        stop: this.parentElement.height - margin.top,\r\n      };\r\n      let hAxis = this.querySelector(\"bottom-axis\") ?? this.querySelector(\"top-axis\");\r\n      if (hAxis) {\r\n        h = {\r\n          ...h,\r\n          min: hAxis.min,\r\n          max: hAxis.max,\r\n        };\r\n      }\r\n      const v = {\r\n        cols: this.getAttribute(\"vAxis\") ? this.getAttribute(\"vAxis\").split(\",\") : [\"y\"],\r\n        start: margin.left,\r\n        stop: this.parentElement.width - margin.right,\r\n      };\r\n      let vAxis = this.querySelector(\"left-axis\") ?? this.querySelector(\"right-axis\");\r\n      if (vAxis) {\r\n        v = {\r\n          ...v,\r\n          min: vAxis.min,\r\n          max: vAxis.max,\r\n        };\r\n      }\r\n      return [h, v];\r\n    }\r\n\r\n    get pathType() {\r\n      return this.querySelector(`path[is=\"path-type\"]`);\r\n    }\r\n\r\n    get pointTypes() {\r\n      return Array.from(this.children).filter((item) => !item.getAttribute(\"is\"));\r\n    }\r\n  }\n\n  class CandleStick extends DataSet {\r\n    constructor() {\r\n      super();\r\n      this.adjust();\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n\r\n    adjust() {\r\n      this.appendChild(createSVGElements(\"line\"));\r\n      this.appendChild(createSVGElements(\"rect\"));\r\n      this.ondraw = ({ shape, row }) => {\r\n        switch (shape.tagName) {\r\n          case \"line\":\r\n            shape.setAttribute(\"x1\", row.x + 5);\r\n            shape.setAttribute(\"x2\", row.x + 5);\r\n            shape.setAttribute(\"y1\", row.low);\r\n            shape.setAttribute(\"y2\", row.high);\r\n            shape.setAttribute(\r\n              \"stroke\",\r\n              row.open > row.close ? \"#28A69A\" : \"#EE5355\"\r\n            );\r\n            break;\r\n          case \"rect\":\r\n            shape.setAttribute(\"width\", 10);\r\n            shape.setAttribute(\"height\", Math.abs(row.open - row.close));\r\n            shape.setAttribute(\"x\", row.x);\r\n            shape.setAttribute(\"y\", row.open);\r\n            shape.setAttribute(\r\n              \"fill\",\r\n              row.open > row.close ? \"#28A69A\" : \"#EE5355\"\r\n            );\r\n            break;\r\n        }\r\n      };\r\n      this.axes = [\r\n        { cols: [\"x\"], length: 200, margin: 10 },\r\n        {\r\n          cols: [\"low\", \"open\", \"close\", \"high\"],\r\n          length: 200,\r\n          margin: 10,\r\n        },\r\n      ];\r\n    }\r\n  }\n\n  const WIDTH = 200;\r\n  const HEIGHT = 200;\r\n  const MARGIN = 0;\n\n  function createSVG(width, height) {\r\n    const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n    svg.setAttribute(\"width\", width);\r\n    svg.setAttribute(\"height\", height);\r\n    svg.setAttribute(\"transform\", \"scale(1,-1)\");\r\n    return svg;\r\n  }\n\n  function drawAxisLine(axis) {\r\n    const g = createSVGElements(\"g\");\r\n    const axisLine = cloneSVGElement(axis.type);\r\n    if (axis.isVertical) {\r\n      axisLine.setAttribute(\"x1\", axis.position);\r\n      axisLine.setAttribute(\"x2\", axis.position);\r\n      axisLine.setAttribute(\"y1\", axis.start);\r\n      axisLine.setAttribute(\"y2\", axis.stop);\r\n    } else {\r\n      axisLine.setAttribute(\"x1\", axis.start);\r\n      axisLine.setAttribute(\"x2\", axis.stop);\r\n      axisLine.setAttribute(\"y1\", axis.position);\r\n      axisLine.setAttribute(\"y2\", axis.position);\r\n    }\r\n\r\n    g.appendChild(axisLine);\r\n    axis.parentElement.svg.appendChild(g);\r\n  }\n\n  function drawTicks(axis) {\r\n    const g = createSVGElements(\"g\");\r\n    axis.ticks.forEach((tick) => {\r\n      const tl = cloneSVGElement(axis.type);\r\n      if (axis.isVertical) {\r\n        tl.setAttribute(\"x1\", axis.position - 5);\r\n        tl.setAttribute(\"x2\", axis.position + 5);\r\n        tl.setAttribute(\"y1\", tick.position);\r\n        tl.setAttribute(\"y2\", tick.position);\r\n      } else {\r\n        tl.setAttribute(\"x1\", tick.position);\r\n        tl.setAttribute(\"x2\", tick.position);\r\n        tl.setAttribute(\"y1\", axis.position - 5);\r\n        tl.setAttribute(\"y2\", axis.position + 5);\r\n      }\r\n      g.appendChild(tl);\r\n    });\r\n\r\n    axis.parentElement.svg.appendChild(g);\r\n  }\n\n  function drawGridLines(axis) {\r\n    const g = createSVGElements(\"g\");\r\n    if (axis.grid) {\r\n      axis.ticks.forEach((tick) => {\r\n        const tl = cloneSVGElement(axis.grid);\r\n        if (axis.isVertical) {\r\n          tl.setAttribute(\"x1\", tick.position);\r\n          tl.setAttribute(\"x2\", tick.position);\r\n          tl.setAttribute(\"y1\", axis.y1);\r\n          tl.setAttribute(\"y2\", axis.y2);\r\n        } else {\r\n          tl.setAttribute(\"x1\", axis.x1);\r\n          tl.setAttribute(\"x2\", axis.x2);\r\n          tl.setAttribute(\"y1\", tick.position);\r\n          tl.setAttribute(\"y2\", tick.position);\r\n        }\r\n        g.appendChild(tl);\r\n      });\r\n    }\r\n    axis.parentElement.svg.appendChild(g);\r\n  }\n\n  function drawLabels(axis) {\r\n    const svg = axis.parentElement.svg;\r\n    const g = createSVGElements(\"g\");\r\n    svg.appendChild(g);\r\n    axis.ticks.forEach((tick) => {\r\n      const text = cloneSVGElement(axis.label);\r\n      text.innerHTML = tick.value;\r\n      g.appendChild(text);\r\n      const { width, height } = text.getBoundingClientRect();\r\n      switch (axis.direction) {\r\n        case \"right\":\r\n          text.setAttribute(\"x\", axis.position + 7);\r\n          text.setAttribute(\"y\", tick.position - height / 3);\r\n          break;\r\n        case \"left\":\r\n          text.setAttribute(\"x\", axis.position - width - 7);\r\n          text.setAttribute(\"y\", tick.position - height / 3);\r\n          break;\r\n        case \"top\":\r\n          text.setAttribute(\"x\", tick.position - width / 2);\r\n          text.setAttribute(\"y\", axis.position + 7);\r\n          break;\r\n        case \"bottom\":\r\n          text.setAttribute(\"x\", tick.position - width / 2);\r\n          text.setAttribute(\"y\", axis.position - height);\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n      flip(svg, text);\r\n    });\r\n  }\n\n  class ChartAxis extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n    }\r\n\r\n    connectedCallback() {\r\n      this.setTickPositions();\r\n      drawAxisLine(this);\r\n      if (this.ticks.length > 0) {\r\n        drawTicks(this);\r\n        drawLabels(this);\r\n        drawGridLines(this);\r\n      }\r\n    }\r\n    disconnectedCallback() {}\r\n\r\n    get margin() {\r\n      return this.parentElement.margin;\r\n    }\r\n\r\n    get height() {\r\n      return this.parentElement.height;\r\n    }\r\n\r\n    get width() {\r\n      return this.parentElement.width;\r\n    }\r\n\r\n    get min() {\r\n      return parseInt(this.getAttribute(\"min\") ?? 0);\r\n    }\r\n\r\n    get max() {\r\n      return parseInt(this.getAttribute(\"max\") ?? 0);\r\n    }\r\n\r\n    get type() {\r\n      return this.querySelector(\"line\");\r\n    }\r\n\r\n    get label() {\r\n      return this.querySelector(\"text\");\r\n    }\r\n\r\n    get grid() {\r\n      return this.querySelector(`line[is=\"grid\"]`);\r\n    }\r\n\r\n    get setTickPositions() {\r\n      this.ticks = [];\r\n      const ticks = parseInt(this.getAttribute(\"ticks\") ?? 0);\r\n      if (ticks <= 0) return;\r\n      const tickSize = Math.round((this.max - this.min) / (ticks - 1));\r\n      let value = this.min;\r\n      let position = this.start;\r\n      while (true) {\r\n        position = ((value - this.min) / (this.max - this.min)) * (this.stop - this.start) + this.start;\r\n        if (position > this.stop) break;\r\n        this.ticks.push({ value, position });\r\n        value += tickSize;\r\n      }\r\n    }\r\n  }\n\n  class LeftAxis extends ChartAxis {\r\n    constructor() {\r\n      super();\r\n      this.start = this.margin.bottom;\r\n      this.stop = this.height - this.margin.top;\r\n      this.position = this.margin.left;\r\n      this.isVertical = true;\r\n      this.direction = \"left\";\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n  }\n\n  class RightAxis extends ChartAxis {\r\n    constructor() {\r\n      super();\r\n      this.start = this.margin.bottom;\r\n      this.stop = this.height - this.margin.top;\r\n      this.position = this.width - this.margin.right;\r\n      this.isVertical = true;\r\n      this.direction = \"right\";\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n  }\n\n  class TopAxis extends ChartAxis {\r\n    constructor() {\r\n      super();\r\n      this.start = this.margin.left;\r\n      this.stop = this.width - this.margin.right;\r\n      this.position = this.height - this.margin.top;\r\n      this.isVertical = false;\r\n      this.direction = \"top\";\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n  }\n\n  class BottomAxis extends ChartAxis {\r\n    constructor() {\r\n      super();\r\n      this.start = this.margin.left;\r\n      this.stop = this.width - this.margin.right;\r\n      this.position = this.margin.bottom;\r\n      this.isVertical = false;\r\n      this.direction = \"bottom\";\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n  }\n\n  class ChartEase extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n      this.setStyles();\r\n      this.height = parseFloat(this.getAttribute(\"height\") ?? HEIGHT);\r\n      this.width = parseFloat(this.getAttribute(\"width\") ?? WIDTH);\r\n      this.margin = {\r\n        top: parseFloat(this.getAttribute(\"margin-top\") ?? this.getAttribute(\"margin\") ?? MARGIN),\r\n        bottom: parseFloat(this.getAttribute(\"margin-bottom\") ?? this.getAttribute(\"margin\") ?? MARGIN),\r\n        left: parseFloat(this.getAttribute(\"margin-left\") ?? this.getAttribute(\"margin\") ?? MARGIN),\r\n        right: parseFloat(this.getAttribute(\"margin-right\") ?? this.getAttribute(\"margin\") ?? MARGIN),\r\n      };\r\n    }\r\n\r\n    connectedCallback() {\r\n      this.svg = createSVG(this.width, this.height);\r\n      this.appendChild(this.svg);\r\n    }\r\n    disconnectedCallback() {}\r\n\r\n    set ondraw(ondraw) {\r\n      this.querySelector(\"data-set\").ondraw = ondraw;\r\n    }\r\n    set data(data) {\r\n      this.querySelector(\"data-set\").data = data;\r\n    }\r\n\r\n    setStyles() {\r\n      this.style.lineHeight = 0;\r\n    }\r\n  }\r\n\r\n  customElements.get(\"left-axis\") ?? customElements.define(\"left-axis\", LeftAxis);\r\n  customElements.get(\"right-axis\") ?? customElements.define(\"right-axis\", RightAxis);\r\n  customElements.get(\"top-axis\") ?? customElements.define(\"top-axis\", TopAxis);\r\n  customElements.get(\"bottom-axis\") ?? customElements.define(\"bottom-axis\", BottomAxis);\r\n\r\n  customElements.get(\"data-set\") ?? customElements.define(\"data-set\", DataSet);\r\n  customElements.get(\"chart-ease\") ?? customElements.define(\"chart-ease\", ChartEase);\r\n  customElements.get(\"candle-stick\") ?? customElements.define(\"candle-stick\", CandleStick);\n\n  return ChartEase;\n\n})();\n//# sourceMappingURL=chart-ease.js.map\n"],"names":["cloneSVGElement","element","newElement","document","createElementNS","tagName","toLowerCase","from","to","Array","attributes","forEach","attr","value","setAttribute","name","style","cssText","copyStyles","children","child","appendChild","createSVGElements","flip","svg","shape","height","getBoundingClientRect","parseFloat","getAttribute","drawPoints","pointTypes","data","originalData","ondraw","g","row","index","pointType","originalRow","x","y","nodeName","width","Number","adjustWidth","adjustHeight","setDefaultPosition","setGroupsMinMax","groups","group","undefined","min","keys","MAX_VALUE","i","length","j","keyMin","getKeyMin","getKeysMin","cols","max","MIN_VALUE","keyMax","getKeyMax","getKeysMax","key","Math","DataSet","HTMLElement","constructor","super","connectedCallback","disconnectedCallback","normalizeGroups","this","getNormalizeGroups","arr","normalizedArr","map","item","arrKeys","Object","includes","round","num","stop","start","normalizeNumber","normalize","parentElement","querySelector","parent","pathType","path","point","join","removeAttribute","loadPathData","drawPath","removeChild","margin","h","split","bottom","top","hAxis","v","left","right","vAxis","filter","ChartAxis","setTickPositions","axis","axisLine","type","isVertical","position","drawAxisLine","ticks","tick","tl","drawTicks","text","label","innerHTML","direction","drawLabels","grid","y1","y2","x1","x2","drawGridLines","parseInt","tickSize","push","ChartEase","setStyles","createSVG","lineHeight","customElements","get","define","adjust","low","high","open","close","abs","axes"],"mappings":"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"}