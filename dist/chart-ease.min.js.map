{"version":3,"file":"chart-ease.min.js","sources":["../site/js/chart-ease.js"],"sourcesContent":["(function () {\n  'use strict';\n\n  function normalize(arr, normalizeGroups) {\r\n    const normalizedArr = arr.map((item) => {\r\n      return { ...item };\r\n    });\r\n\r\n    const arrKeys = Object.keys(arr[0]);\r\n    normalizedArr.forEach((item) => {\r\n      normalizeGroups.forEach((group) => {\r\n        arrKeys.forEach((key) => {\r\n          if (group.cols.includes(key)) {\r\n            item[key] = Math.round(normalizeNumber(item[key], group));\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    return normalizedArr;\r\n  }\r\n\r\n  function normalizeNumber(num, group) {\r\n    return ((num - group.min) / (group.max - group.min)) * (group.stop - group.start) + group.start;\r\n  }\n\n  function copyAttrs(from, to) {\r\n    Array.from(from.attributes).forEach((attr) => {\r\n      if (attr.value) to.setAttribute(attr.name, attr.value);\r\n    });\r\n  }\n\n  function copyStyles(from, to) {\r\n    if (from.style.cssText) to.style.cssText = from.style.cssText;\r\n  }\n\n  function cloneSVGElement(element) {\r\n    const newElement = document.createElementNS(\r\n      \"http://www.w3.org/2000/svg\",\r\n      element.tagName.toLowerCase()\r\n    );\r\n    copyAttrs(element, newElement);\r\n    copyStyles(element, newElement);\r\n    const children = Array.from(element.children);\r\n    children.forEach((child) => {\r\n      newElement.appendChild(cloneSVGElement(child));\r\n    });\r\n    return newElement;\r\n  }\n\n  function createSVGElements(tagName) {\r\n    return document.createElementNS(\"http://www.w3.org/2000/svg\", tagName);\r\n  }\n\n  function flip(svg, shape) {\r\n    const { height } = svg.getBoundingClientRect();\r\n    if (shape.tagName.toLowerCase() == \"text\") {\r\n      shape.setAttribute(\"transform\", `scale(1,-1) translate(0, -${height})`);\r\n      shape.setAttribute(\"y\", height - parseFloat(shape.getAttribute(\"y\")));\r\n    }\r\n  }\n\n  function drawPoints(svg, pointTypes, data, originalData, ondraw) {\r\n    const g = createSVGElements(\"g\");\r\n    data.forEach((row, index) => {\r\n      pointTypes.forEach((pointType) => {\r\n        const shape = cloneSVGElement(pointType);\r\n        if (!ondraw) setDefaultPosition(shape, row.x, row.y);\r\n        else\r\n          ondraw({\r\n            shape,\r\n            row,\r\n            originalRow: originalData[index],\r\n            index,\r\n          });\r\n        g.appendChild(shape);\r\n        flip(svg, shape);\r\n      });\r\n    });\r\n    svg.appendChild(g);\r\n  }\r\n\r\n  function setDefaultPosition(shape, x, y) {\r\n    switch (shape.nodeName) {\r\n      case \"rect\":\r\n        if (x > 0) {\r\n          const width = Number(shape.getAttribute(\"width\"));\r\n          const adjustWidth = width > 0 ? x - width / 2 : x;\r\n          shape.setAttribute(\"x\", adjustWidth);\r\n        }\r\n        if (y > 0) {\r\n          const height = Number(shape.getAttribute(\"height\"));\r\n          const adjustHeight = height > 0 ? y - height / 2 : x;\r\n          shape.setAttribute(\"y\", adjustHeight);\r\n        }\r\n        break;\r\n      case \"circle\":\r\n      case \"ellipse\":\r\n        if (x > 0) shape.setAttribute(\"cx\", x);\r\n        if (y > 0) shape.setAttribute(\"cy\", y);\r\n      default:\r\n        if (x > 0) shape.setAttribute(\"x\", x);\r\n        if (y > 0) shape.setAttribute(\"y\", y);\r\n        break;\r\n    }\r\n  }\n\n  function drawPath(parent, pathType, data) {\r\n    if (!pathType) return;\r\n    const path = cloneSVGElement(pathType);\r\n    loadPathData(path, data);\r\n    parent.appendChild(path);\r\n  }\r\n\r\n  function loadPathData(path, data) {\r\n    path.setAttribute(\r\n      \"d\",\r\n      data\r\n        .map((point, index) => (index === 0 ? `M ${point.x} ${point.y}` : ` L ${point.x} ${point.y}`))\r\n        .join(\" \")\r\n    );\r\n    path.removeAttribute(\"is\");\r\n  }\n\n  function setGroupsMinMax(data, groups) {\r\n    groups.forEach((group) => {\r\n      if (group.min == undefined) group.min = getKeysMin(data, group.cols);\r\n      if (group.max == undefined) group.max = getKeysMax(data, group.cols);\r\n    });\r\n  }\r\n\r\n  function getKeysMin(data, keys) {\r\n    let min = Number.MAX_VALUE;\r\n    for (let i = 1; i < data.length; i++) {\r\n      for (let j = 0; j < keys.length; j++) {\r\n        const keyMin = getKeyMin(data, keys[j]);\r\n        if (min > keyMin) min = keyMin;\r\n      }\r\n    }\r\n    return min;\r\n  }\r\n\r\n  function getKeysMax(data, keys) {\r\n    let max = Number.MIN_VALUE;\r\n    for (let i = 1; i < data.length; i++) {\r\n      for (let j = 0; j < keys.length; j++) {\r\n        const keyMax = getKeyMax(data, keys[j]);\r\n        if (keyMax > max) max = keyMax;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  function getKeyMin(data, key) {\r\n    let min = data[0][key];\r\n    for (let i = 1; i < data.length; i++) {\r\n      min = Math.min(min, data[i][key]);\r\n    }\r\n    return min;\r\n  }\r\n\r\n  function getKeyMax(data, key) {\r\n    let max = data[0][key];\r\n    for (let i = 1; i < data.length; i++) {\r\n      max = Math.max(max, data[i][key]);\r\n    }\r\n    return max;\r\n  }\n\n  class DataSet extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n\r\n    set data(originalData) {\r\n      const normalizeGroups = this.getNormalizeGroups();\r\n      setGroupsMinMax(originalData, normalizeGroups);\r\n      if (this[\"ondataSet\"]) this[\"ondataSet\"]();\r\n      const data = normalize(originalData, normalizeGroups);\r\n      const svg = this.parentElement.querySelector(\"svg\");\r\n      drawPath(svg, this.pathType, data);\r\n      drawPoints(svg, this.pointTypes, data, originalData, this[\"ondraw\"]);\r\n      this.parentElement.removeChild(this);\r\n    }\r\n\r\n    getNormalizeGroups() {\r\n      const h = {\r\n        cols: this.getAttribute(\"hAxis\") ? this.getAttribute(\"hAxis\").split(\",\") : [\"x\"],\r\n      };\r\n      if (this.parentElement.axes.h) {\r\n        h.start = this.parentElement.axes.h.x1;\r\n        h.stop = this.parentElement.axes.h.x2;\r\n        h.min = this.parentElement.axes.h.min;\r\n        h.max = this.parentElement.axes.h.max;\r\n      }\r\n      const v = {\r\n        cols: this.getAttribute(\"vAxis\") ? this.getAttribute(\"vAxis\").split(\",\") : [\"y\"],\r\n      };\r\n      if (this.parentElement.axes.v) {\r\n        v.start = this.parentElement.axes.v.y1;\r\n        v.stop = this.parentElement.axes.v.y2;\r\n        v.min = this.parentElement.axes.v.min;\r\n        v.max = this.parentElement.axes.v.max;\r\n      }\r\n      return { h, v };\r\n    }\r\n\r\n    get pathType() {\r\n      return this.querySelector(`path[is=\"path-type\"]`);\r\n    }\r\n\r\n    get pointTypes() {\r\n      return Array.from(this.children).filter((item) => !item.getAttribute(\"is\"));\r\n    }\r\n  }\n\n  class CandleStick extends DataSet {\r\n    constructor() {\r\n      super();\r\n      this.adjust();\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n\r\n    adjust() {\r\n      this.appendChild(createSVGElements(\"line\"));\r\n      this.appendChild(createSVGElements(\"rect\"));\r\n      this.ondraw = ({ shape, row }) => {\r\n        switch (shape.tagName) {\r\n          case \"line\":\r\n            shape.setAttribute(\"x1\", row.x + 5);\r\n            shape.setAttribute(\"x2\", row.x + 5);\r\n            shape.setAttribute(\"y1\", row.low);\r\n            shape.setAttribute(\"y2\", row.high);\r\n            shape.setAttribute(\r\n              \"stroke\",\r\n              row.open > row.close ? \"#28A69A\" : \"#EE5355\"\r\n            );\r\n            break;\r\n          case \"rect\":\r\n            shape.setAttribute(\"width\", 10);\r\n            shape.setAttribute(\"height\", Math.abs(row.open - row.close));\r\n            shape.setAttribute(\"x\", row.x);\r\n            shape.setAttribute(\"y\", row.open);\r\n            shape.setAttribute(\r\n              \"fill\",\r\n              row.open > row.close ? \"#28A69A\" : \"#EE5355\"\r\n            );\r\n            break;\r\n        }\r\n      };\r\n      this.axes = [\r\n        { cols: [\"x\"], length: 200, margin: 10 },\r\n        {\r\n          cols: [\"low\", \"open\", \"close\", \"high\"],\r\n          length: 200,\r\n          margin: 10,\r\n        },\r\n      ];\r\n    }\r\n  }\n\n  const WIDTH = 200;\r\n  const HEIGHT = 200;\r\n  const MARGIN = 0;\n\n  function createSVG(width, height) {\r\n    const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n    svg.setAttribute(\"width\", width);\r\n    svg.setAttribute(\"height\", height);\r\n    svg.setAttribute(\"transform\", \"scale(1,-1)\");\r\n    return svg;\r\n  }\n\n  function drawAxes(svg, axes) {\r\n    const g = createSVGElements(\"g\");\r\n    if (axes.v && axes.v.type) {\r\n      const axis = cloneSVGElement(axes.v.type);\r\n      axis.setAttribute(\"x1\", axes.v.x);\r\n      axis.setAttribute(\"x2\", axes.v.x);\r\n      axis.setAttribute(\"y1\", axes.v.y1);\r\n      axis.setAttribute(\"y2\", axes.v.y2);\r\n      g.appendChild(axis);\r\n    }\r\n\r\n    if (axes.h && axes.h.type) {\r\n      const axis = cloneSVGElement(axes.h.type);\r\n      axis.setAttribute(\"x1\", axes.h.x1);\r\n      axis.setAttribute(\"x2\", axes.h.x2);\r\n      axis.setAttribute(\"y1\", axes.h.y);\r\n      axis.setAttribute(\"y2\", axes.h.y);\r\n      g.appendChild(axis);\r\n    }\r\n    svg.appendChild(g);\r\n  }\n\n  function drawTicks(svg, axes, plot) {\r\n    const g = createSVGElements(\"g\");\r\n    if (axes.h && axes.h.ticks.length > 1) {\r\n      axes.h.ticks.forEach((tick) => {\r\n        const tl = cloneSVGElement(axes.h.type);\r\n        tl.setAttribute(\"x1\", tick.position);\r\n        tl.setAttribute(\"x2\", tick.position);\r\n        tl.setAttribute(\"y1\", axes.h.y - 5);\r\n        tl.setAttribute(\"y2\", axes.h.y + 5);\r\n        g.appendChild(tl);\r\n      });\r\n    }\r\n    if (axes.v && axes.v.ticks.length > 1) {\r\n      axes.v.ticks.forEach((tick) => {\r\n        const tl = cloneSVGElement(axes.v.type);\r\n        tl.setAttribute(\"x1\", axes.v.x - 5);\r\n        tl.setAttribute(\"x2\", axes.v.x + 5);\r\n        tl.setAttribute(\"y1\", tick.position);\r\n        tl.setAttribute(\"y2\", tick.position);\r\n        g.appendChild(tl);\r\n      });\r\n    }\r\n    svg.appendChild(g);\r\n  }\n\n  function drawGridLines(svg, axes) {\r\n    const g = createSVGElements(\"g\");\r\n    if (axes.h && axes.h.ticks.length > 1 && axes.h.grid) {\r\n      axes.v.ticks.forEach((tick) => {\r\n        const tl = cloneSVGElement(axes.h.grid);\r\n        tl.setAttribute(\"x1\", axes.h.x1);\r\n        tl.setAttribute(\"x2\", axes.h.x2);\r\n        tl.setAttribute(\"y1\", tick.position);\r\n        tl.setAttribute(\"y2\", tick.position);\r\n        g.appendChild(tl);\r\n      });\r\n    }\r\n    if (axes.v && axes.v.ticks.length > 1 && axes.v.grid) {\r\n      axes.h.ticks.forEach((tick) => {\r\n        const tl = cloneSVGElement(axes.v.grid);\r\n        tl.setAttribute(\"x1\", tick.position);\r\n        tl.setAttribute(\"x2\", tick.position);\r\n        tl.setAttribute(\"y1\", axes.v.y1);\r\n        tl.setAttribute(\"y2\", axes.v.y2);\r\n        g.appendChild(tl);\r\n      });\r\n    }\r\n    svg.appendChild(g);\r\n  }\n\n  function drawLabels(svg, axes, axesLines) {\r\n    const g = createSVGElements(\"g\");\r\n    svg.appendChild(g);\r\n    if (axes.v && axes.v.ticks.length > 0) {\r\n      axes.v.ticks.forEach((tick) => {\r\n        const text = cloneSVGElement(axes.v.label);\r\n        text.innerHTML = tick.value;\r\n        g.appendChild(text);\r\n        const { width, height } = text.getBoundingClientRect();\r\n        if (axes.v.position == \"right\") {\r\n          text.setAttribute(\"x\", axes.v.x + 7);\r\n          text.setAttribute(\"y\", tick.position - height / 3);\r\n        } else {\r\n          text.setAttribute(\"x\", axes.v.x - width - 7);\r\n          text.setAttribute(\"y\", tick.position - height / 3);\r\n        }\r\n        flip(svg, text);\r\n      });\r\n    }\r\n    if (axes.h && axes.h.ticks.length > 0) {\r\n      axes.h.ticks.forEach((tick) => {\r\n        const text = cloneSVGElement(axes.h.label);\r\n        text.innerHTML = tick.value;\r\n        g.appendChild(text);\r\n        const { width, height } = text.getBoundingClientRect();\r\n        if (axes.h.position == \"top\") {\r\n          text.setAttribute(\"x\", tick.position - width / 2);\r\n          text.setAttribute(\"y\", axes.h.y + 7);\r\n        } else {\r\n          text.setAttribute(\"x\", tick.position - width / 2);\r\n          text.setAttribute(\"y\", axes.h.y - height);\r\n        }\r\n        flip(svg, text);\r\n      });\r\n    }\r\n  }\n\n  function getAxisTicks(min, max, count, start, stop) {\r\n    const axisTicks = [];\r\n    const tickSize = getTickSize(min, max, count);\r\n    let value = min;\r\n    let position = start;\r\n    while (true) {\r\n      position = ((value - min) / (max - min)) * (stop - start) + start;\r\n      if (!position || position > stop) break;\r\n      axisTicks.push({ value, position });\r\n      value += tickSize;\r\n    }\r\n    return axisTicks;\r\n  }\r\n\r\n  function getTickSize(min, max, count) {\r\n    return Math.round((max - min) / (count - 1));\r\n  }\n\n  class ChartEase extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n      this.setStyles();\r\n      this.init();\r\n    }\r\n\r\n    connectedCallback() {\r\n      this.axesInit();\r\n      this.svg = createSVG(this.width, this.height);\r\n      this.appendChild(this.svg);\r\n      drawAxes(this.svg, this.axes);\r\n      drawTicks(this.svg, this.axes);\r\n      drawLabels(this.svg, this.axes);\r\n      drawGridLines(this.svg, this.axes);\r\n    }\r\n    disconnectedCallback() {}\r\n\r\n    set ondraw(ondraw) {\r\n      this.querySelector(\"data-set\").ondraw = ondraw;\r\n    }\r\n    set data(data) {\r\n      this.querySelector(\"data-set\").data = data;\r\n    }\r\n\r\n    init() {\r\n      this.height = parseFloat(this.getAttribute(\"height\") ?? HEIGHT);\r\n      this.width = parseFloat(this.getAttribute(\"width\") ?? WIDTH);\r\n      this.margin = {\r\n        top: parseFloat(this.getAttribute(\"margin-top\") ?? this.getAttribute(\"margin\") ?? MARGIN),\r\n        bottom: parseFloat(this.getAttribute(\"margin-bottom\") ?? this.getAttribute(\"margin\") ?? MARGIN),\r\n        left: parseFloat(this.getAttribute(\"margin-left\") ?? this.getAttribute(\"margin\") ?? MARGIN),\r\n        right: parseFloat(this.getAttribute(\"margin-right\") ?? this.getAttribute(\"margin\") ?? MARGIN),\r\n      };\r\n      this.querySelectorAll(\"data-set\").forEach((ds) => {});\r\n    }\r\n\r\n    axesInit() {\r\n      const getIntAttr = (elem, attr) => parseInt(elem.getAttribute(attr) ?? 0);\r\n      const vAxis = this.querySelector(`g[is=\"v-axis\"]`);\r\n      const hAxis = this.querySelector(`g[is=\"h-axis\"]`);\r\n\r\n      const vStart = this.margin.bottom;\r\n      const vStop = this.height - this.margin.top;\r\n      const hStart = this.margin.left;\r\n      const hStop = this.width - this.margin.right;\r\n\r\n      this.axes = {};\r\n      if (vAxis) {\r\n        const position = vAxis.getAttribute(\"position\");\r\n        const min = getIntAttr(vAxis, \"min\");\r\n        const max = getIntAttr(vAxis, \"max\");\r\n        this.axes.v = {\r\n          x: position == \"right\" ? hStop : hStart,\r\n          y1: vStart,\r\n          y2: vStop,\r\n          min,\r\n          max,\r\n          position,\r\n          type: vAxis.querySelector(\"line\"),\r\n          label: vAxis.querySelector(\"text\"),\r\n          grid: vAxis.querySelector(`line[is=\"grid\"]`),\r\n          ticks: getAxisTicks(min, max, getIntAttr(vAxis, \"ticks\"), vStart, vStop),\r\n        };\r\n      }\r\n      if (hAxis) {\r\n        const position = hAxis.getAttribute(\"position\");\r\n        const min = getIntAttr(hAxis, \"min\");\r\n        const max = getIntAttr(hAxis, \"max\");\r\n        this.axes.h = {\r\n          y: position == \"top\" ? vStop : vStart,\r\n          x1: hStart,\r\n          x2: hStop,\r\n          min,\r\n          max,\r\n          position,\r\n          type: hAxis.querySelector(\"line\"),\r\n          label: hAxis.querySelector(\"text\"),\r\n          grid: vAxis.querySelector(`line[is=\"grid\"]`),\r\n          ticks: getAxisTicks(min, max, getIntAttr(hAxis, \"ticks\"), hStart, hStop),\r\n        };\r\n      }\r\n    }\r\n\r\n    setStyles() {\r\n      this.style.lineHeight = 0;\r\n    }\r\n  }\r\n\r\n  customElements.get(\"data-set\") ?? customElements.define(\"data-set\", DataSet);\r\n  customElements.get(\"chart-ease\") ?? customElements.define(\"chart-ease\", ChartEase);\r\n  customElements.get(\"candle-stick\") ?? customElements.define(\"candle-stick\", CandleStick);\n\n  return ChartEase;\n\n})();\n//# sourceMappingURL=chart-ease.js.map\n"],"names":["cloneSVGElement","element","newElement","document","createElementNS","tagName","toLowerCase","from","to","Array","attributes","forEach","attr","value","setAttribute","name","style","cssText","copyStyles","children","child","appendChild","createSVGElements","flip","svg","shape","height","getBoundingClientRect","parseFloat","getAttribute","drawPoints","pointTypes","data","originalData","ondraw","g","row","index","pointType","originalRow","x","y","nodeName","width","Number","adjustWidth","adjustHeight","setDefaultPosition","setGroupsMinMax","groups","group","undefined","min","keys","MAX_VALUE","i","length","j","keyMin","getKeyMin","getKeysMin","cols","max","MIN_VALUE","keyMax","getKeyMax","getKeysMax","key","Math","DataSet","HTMLElement","constructor","super","connectedCallback","disconnectedCallback","normalizeGroups","this","getNormalizeGroups","arr","normalizedArr","map","item","arrKeys","Object","includes","round","num","stop","start","normalizeNumber","normalize","parentElement","querySelector","parent","pathType","path","point","join","removeAttribute","loadPathData","drawPath","removeChild","h","split","axes","x1","x2","v","y1","y2","filter","getAxisTicks","count","axisTicks","tickSize","getTickSize","position","push","ChartEase","setStyles","init","axesInit","createSVG","type","axis","drawAxes","plot","ticks","tick","tl","drawTicks","axesLines","text","label","innerHTML","drawLabels","grid","drawGridLines","margin","top","bottom","left","right","querySelectorAll","ds","getIntAttr","elem","parseInt","vAxis","hAxis","vStart","vStop","hStart","hStop","lineHeight","customElements","get","define","adjust","low","high","open","close","abs"],"mappings":"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"}