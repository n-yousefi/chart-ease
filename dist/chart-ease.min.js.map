{"version":3,"file":"chart-ease.min.js","sources":["../site/js/chart-ease.js"],"sourcesContent":["(function () {\n  'use strict';\n\n  function normalize(arr, normalizeKeys) {\r\n    const normalizedArr = arr.map((item) => {\r\n      return { ...item };\r\n    });\r\n    const nGroups = [];\r\n    normalizeKeys.forEach((nGroup) => {\r\n      nGroups.push({\r\n        ...nGroup,\r\n        min: getKeysMin(arr, nGroup.cols),\r\n        max: getKeysMax(arr, nGroup.cols),\r\n      });\r\n    });\r\n    const arrKeys = Object.keys(arr[0]);\r\n    normalizedArr.forEach((item) => {\r\n      nGroups.forEach((group) => {\r\n        arrKeys.forEach((key) => {\r\n          if (group.cols.includes(key)) {\r\n            item[key] =\r\n              ((item[key] - group.min) / (group.max - group.min)) *\r\n                (group.upperBound - group.lowerBound) +\r\n              group.lowerBound;\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    nGroups\r\n      .filter((group) => group.flip)\r\n      .forEach((group) => {\r\n        flip(normalizedArr, group);\r\n      });\r\n\r\n    return normalizedArr;\r\n  }\r\n\r\n  function getKeysMin(arr, keys) {\r\n    let min = Number.MAX_VALUE;\r\n    for (let i = 1; i < arr.length; i++) {\r\n      for (let j = 0; j < keys.length; j++) {\r\n        const keyMin = getKeyMin(arr, keys[j]);\r\n        if (min > keyMin) min = keyMin;\r\n      }\r\n    }\r\n    return min;\r\n  }\r\n\r\n  function getKeysMax(arr, keys) {\r\n    let max = Number.MIN_VALUE;\r\n    for (let i = 1; i < arr.length; i++) {\r\n      for (let j = 0; j < keys.length; j++) {\r\n        const keyMax = getKeyMax(arr, keys[j]);\r\n        if (keyMax > max) max = keyMax;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  function getKeyMin(arr, key) {\r\n    let min = arr[0][key];\r\n    for (let i = 1; i < arr.length; i++) {\r\n      min = Math.min(min, arr[i][key]);\r\n    }\r\n    return min;\r\n  }\r\n\r\n  function getKeyMax(arr, key) {\r\n    let max = arr[0][key];\r\n    for (let i = 1; i < arr.length; i++) {\r\n      max = Math.max(max, arr[i][key]);\r\n    }\r\n    return max;\r\n  }\r\n\r\n  function flip(arr, nGroup) {\r\n    const keys = nGroup.cols;\r\n    let max = getKeysMax(arr, keys);\r\n    arr.forEach((item) => {\r\n      keys.forEach((key) => {\r\n        item[key] = max - item[key] + nGroup.lowerBound;\r\n      });\r\n    });\r\n  }\n\n  function copyAttrs(from, to) {\r\n    Array.from(from.attributes).forEach((attr) => {\r\n      if (attr.value) to.setAttribute(attr.name, attr.value);\r\n    });\r\n  }\n\n  function copyStyles(from, to) {\r\n    if (from.style.cssText) to.style.cssText = from.style.cssText;\r\n  }\n\n  function cloneSVGElement(element) {\r\n    const newElement = document.createElementNS(\r\n      \"http://www.w3.org/2000/svg\",\r\n      element.tagName.toLowerCase()\r\n    );\r\n    copyAttrs(element, newElement);\r\n    copyStyles(element, newElement);\r\n    const children = Array.from(element.children);\r\n    children.forEach((child) => {\r\n      newElement.appendChild(cloneSVGElement(child));\r\n    });\r\n    return newElement;\r\n  }\n\n  function drawPoints(\r\n    svg,\r\n    pointTypes,\r\n    data,\r\n    originalData,\r\n    ondraw\r\n  ) {\r\n    data.forEach((row, index) => {\r\n      pointTypes.forEach((pointType) => {\r\n        const shape = cloneSVGElement(pointType);\r\n        if (!ondraw) setDefaultPosition(shape, row.x, row.y);\r\n        else\r\n          ondraw({\r\n            shape,\r\n            row,\r\n            originalRow: originalData[index],\r\n            index,\r\n          });\r\n        svg.appendChild(shape);\r\n      });\r\n    });\r\n  }\r\n\r\n  function setDefaultPosition(shape, x, y) {\r\n    switch (shape.nodeName) {\r\n      case \"rect\":\r\n        if (x > 0) {\r\n          const width = Number(shape.getAttribute(\"width\"));\r\n          const adjustWidth = width > 0 ? x - width / 2 : x;\r\n          shape.setAttribute(\"x\", adjustWidth);\r\n        }\r\n        if (y > 0) {\r\n          const height = Number(shape.getAttribute(\"height\"));\r\n          const adjustHeight = height > 0 ? y - height / 2 : x;\r\n          shape.setAttribute(\"y\", adjustHeight);\r\n        }\r\n        break;\r\n      case \"circle\":\r\n      case \"ellipse\":\r\n        if (x > 0) shape.setAttribute(\"cx\", x);\r\n        if (y > 0) shape.setAttribute(\"cy\", y);\r\n      default:\r\n        if (x > 0) shape.setAttribute(\"x\", x);\r\n        if (y > 0) shape.setAttribute(\"y\", y);\r\n        break;\r\n    }\r\n  }\n\n  function drawPath(parent, pathType, data) {\r\n    if (!pathType) return;\r\n    const path = cloneSVGElement(pathType);\r\n    loadPathData(path, data);\r\n    parent.appendChild(path);\r\n  }\r\n\r\n  function loadPathData(path, data) {\r\n    path.setAttribute(\r\n      \"d\",\r\n      data\r\n        .map((point, index) =>\r\n          index === 0 ? `M ${point.x} ${point.y}` : `L ${point.x} ${point.y}`\r\n        )\r\n        .join(\" \")\r\n    );\r\n    path.removeAttribute(\"is\");\r\n  }\n\n  const WIDTH = 200;\r\n  const HEIGHT = 200;\r\n  const MARGIN = 0;\r\n  const PADING = 0;\n\n  function drawAxes(parent, axesTypes, axes) {\r\n    const hAxis = axes[0];\r\n    const vAxis = axes[1];\r\n    if (axesTypes.left) {\r\n      const axis = createAxis(parent, axesTypes.left);\r\n      axis.setAttribute(\"x1\", hAxis.lowerAxis);\r\n      axis.setAttribute(\"x2\", hAxis.lowerAxis);\r\n      axis.setAttribute(\"y1\", vAxis.lowerAxis);\r\n      axis.setAttribute(\"y2\", vAxis.upperAxis);\r\n    }\r\n    if (axesTypes.top) {\r\n      const axis = createAxis(parent, axesTypes.top);\r\n      axis.setAttribute(\"x1\", hAxis.lowerAxis);\r\n      axis.setAttribute(\"x2\", hAxis.upperAxis);\r\n      axis.setAttribute(\"y1\", vAxis.upperAxis);\r\n      axis.setAttribute(\"y2\", vAxis.upperAxis);\r\n    }\r\n    if (axesTypes.bottom) {\r\n      const axis = createAxis(parent, axesTypes.bottom);\r\n      axis.setAttribute(\"x1\", hAxis.lowerAxis);\r\n      axis.setAttribute(\"x2\", hAxis.upperAxis);\r\n      axis.setAttribute(\"y1\", vAxis.lowerAxis);\r\n      axis.setAttribute(\"y2\", vAxis.lowerAxis);\r\n    }\r\n    if (axesTypes.right) {\r\n      const axis = createAxis(parent, axesTypes.right);\r\n      axis.setAttribute(\"x1\", hAxis.upperAxis);\r\n      axis.setAttribute(\"x2\", hAxis.upperAxis);\r\n      axis.setAttribute(\"y1\", vAxis.lowerAxis);\r\n      axis.setAttribute(\"y2\", vAxis.upperAxis);\r\n    }\r\n  }\r\n\r\n  function createAxis(parent, axisType) {\r\n    const axis = cloneSVGElement(axisType);\r\n    parent.appendChild(axis);\r\n    return axis;\r\n  }\n\n  class DataSet extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n\r\n    draw(data, originalData) {\r\n      const parent = this.parentElement.querySelector(\"svg > g\");\r\n      drawPath(parent, this.pathType, data);\r\n      drawPoints(parent, this.pointTypes, data, originalData, this[\"ondraw\"]);\r\n      drawAxes(parent, this.axesTypes, this.axes);\r\n    }\r\n\r\n    set data(originalData) {\r\n      this.axesInit();\r\n      const data = normalize(originalData, this.axes);\r\n      this.draw(data, originalData);\r\n      this.parentElement.removeChild(this);\r\n    }\r\n\r\n    axesInit() {\r\n      let axesArr = this[\"axes\"] ? this[\"axes\"] : [];\r\n      const hAxis = this[\"hAxis\"] ? this[\"hAxis\"] : null;\r\n      const vAxis = this[\"vAxis\"] ? this[\"vAxis\"] : null;\r\n      if (hAxis) axesArr.push(hAxis);\r\n      if (vAxis) {\r\n        //vAxis.flip = true;\r\n        axesArr.push(vAxis);\r\n      }\r\n      this.axes =\r\n        axesArr.length > 0\r\n          ? axesArr.map((axis) => {\r\n              const margin = axis.margin ?? MARGIN;\r\n              const padding = axis.padding ?? PADING;\r\n              const marginStart = axis.marginStart ?? margin;\r\n              const marginEnd = axis.marginEnd ?? margin;\r\n              const paddingStart = axis.paddingStart ?? padding;\r\n              const paddingEnd = axis.paddingEnd ?? padding;\r\n              return {\r\n                cols: axis.cols,\r\n                lowerBound: marginStart + paddingStart,\r\n                upperBound: axis.length - marginEnd - paddingEnd,\r\n                lowerAxis: marginStart,\r\n                upperAxis: axis.length - marginEnd,\r\n                flip: axis.flip,\r\n                length: axis.length,\r\n              };\r\n            })\r\n          : this.getDefaultAxesObj();\r\n    }\r\n\r\n    getDefaultAxesObj() {\r\n      const width = Number(this.parentElement.getAttribute(\"width\") ?? WIDTH);\r\n      const height = Number(this.parentElement.getAttribute(\"height\") ?? HEIGHT);\r\n      const margin = Number(this.parentElement.getAttribute(\"margin\") ?? MARGIN);\r\n      const padding = Number(\r\n        this.parentElement.getAttribute(\"padding\") ?? PADING\r\n      );\r\n      return [\r\n        {\r\n          cols: [\"x\"],\r\n          lowerBound: margin + padding,\r\n          upperBound: width - margin - padding,\r\n          lowerAxis: margin,\r\n          upperAxis: width - margin,\r\n          length: width,\r\n        },\r\n        {\r\n          cols: [\"y\"],\r\n          lowerBound: margin + padding,\r\n          upperBound: height - margin - padding,\r\n          lowerAxis: margin,\r\n          upperAxis: height - margin,\r\n          length: height,\r\n          flip: true,\r\n        },\r\n      ];\r\n    }\r\n\r\n    get pathType() {\r\n      return this.querySelector(`path[is=\"path-type\"]`);\r\n    }\r\n\r\n    get pointTypes() {\r\n      return Array.from(this.children).filter((item) => !item.getAttribute(\"is\"));\r\n    }\r\n\r\n    get axesTypes() {\r\n      return {\r\n        left: Array.from(this.children).find(\r\n          (item) => item.getAttribute(\"is\") == \"left-axis\"\r\n        ),\r\n        right: Array.from(this.children).find(\r\n          (item) => item.getAttribute(\"is\") == \"right-axis\"\r\n        ),\r\n        top: Array.from(this.children).find(\r\n          (item) => item.getAttribute(\"is\") == \"top-axis\"\r\n        ),\r\n        bottom: Array.from(this.children).find(\r\n          (item) => item.getAttribute(\"is\") == \"bottom-axis\"\r\n        ),\r\n      };\r\n    }\r\n  }\n\n  function createSVGElements(tagName) {\r\n    return document.createElementNS(\"http://www.w3.org/2000/svg\", tagName);\r\n  }\n\n  class CandleStick extends DataSet {\r\n    constructor() {\r\n      super();\r\n      this.adjust();\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n\r\n    adjust() {\r\n      this.appendChild(createSVGElements(\"line\"));\r\n      this.appendChild(createSVGElements(\"rect\"));\r\n      this.ondraw = ({ shape, row }) => {\r\n        switch (shape.tagName) {\r\n          case \"line\":\r\n            shape.setAttribute(\"x1\", row.x + 5);\r\n            shape.setAttribute(\"x2\", row.x + 5);\r\n            shape.setAttribute(\"y1\", row.low);\r\n            shape.setAttribute(\"y2\", row.high);\r\n            shape.setAttribute(\r\n              \"stroke\",\r\n              row.open > row.close ? \"#28A69A\" : \"#EE5355\"\r\n            );\r\n            break;\r\n          case \"rect\":\r\n            shape.setAttribute(\"width\", 10);\r\n            shape.setAttribute(\"height\", Math.abs(row.open - row.close));\r\n            shape.setAttribute(\"x\", row.x);\r\n            shape.setAttribute(\"y\", row.open);\r\n            shape.setAttribute(\r\n              \"fill\",\r\n              row.open > row.close ? \"#28A69A\" : \"#EE5355\"\r\n            );\r\n            break;\r\n        }\r\n      };\r\n      this.axes = [\r\n        { cols: [\"x\"], length: 200, margin: 10 },\r\n        {\r\n          cols: [\"low\", \"open\", \"close\", \"high\"],\r\n          length: 200,\r\n          margin: 10,\r\n        },\r\n      ];\r\n    }\r\n  }\n\n  function createSVG(width, height) {\r\n    const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n    svg.setAttribute(\"width\", width);\r\n    svg.setAttribute(\"height\", height);\r\n\r\n    const g = createSVGElements(\"g\");\r\n    g.setAttribute(\"transform\", `matrix(1 0 0 -1 0 ${height})`);\r\n    svg.appendChild(g);\r\n    return svg;\r\n  }\n\n  class ChartEase extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n      this.setStyles();\r\n    }\r\n\r\n    connectedCallback() {\r\n      this.svg = createSVG(this.width, this.height);\r\n      this.appendChild(this.svg);\r\n    }\r\n    disconnectedCallback() {}\r\n\r\n    set axes(axes) {\r\n      this.firstElementChild.axes = axes;\r\n    }\r\n    set hAxis(hAxis) {\r\n      this.firstElementChild.hAxis = hAxis;\r\n    }\r\n    set vAxis(vAxis) {\r\n      this.firstElementChild.vAxis = vAxis;\r\n    }\r\n    set ondraw(ondraw) {\r\n      this.firstElementChild.ondraw = ondraw;\r\n    }\r\n    set data(data) {\r\n      this.firstElementChild.data = data;\r\n    }\r\n\r\n    get width() {\r\n      return this.getAttribute(\"width\") ?? WIDTH;\r\n    }\r\n    get height() {\r\n      return this.getAttribute(\"height\") ?? HEIGHT;\r\n    }\r\n\r\n    setStyles() {\r\n      this.style.lineHeight = 0;\r\n    }\r\n  }\r\n\r\n  customElements.get(\"data-set\") ?? customElements.define(\"data-set\", DataSet);\r\n  customElements.get(\"chart-ease\") ??\r\n    customElements.define(\"chart-ease\", ChartEase);\r\n  customElements.get(\"candle-stick\") ??\r\n    customElements.define(\"candle-stick\", CandleStick);\n\n  return ChartEase;\n\n})();\n//# sourceMappingURL=chart-ease.js.map\n"],"names":["normalize","arr","normalizeKeys","normalizedArr","map","item","nGroups","forEach","nGroup","push","min","getKeysMin","cols","max","getKeysMax","arrKeys","Object","keys","group","key","includes","upperBound","lowerBound","filter","flip","Number","MAX_VALUE","i","length","j","keyMin","getKeyMin","MIN_VALUE","keyMax","getKeyMax","Math","cloneSVGElement","element","newElement","document","createElementNS","tagName","toLowerCase","from","to","Array","attributes","attr","value","setAttribute","name","style","cssText","copyStyles","children","child","appendChild","drawPoints","svg","pointTypes","data","originalData","ondraw","row","index","pointType","shape","originalRow","x","y","nodeName","width","getAttribute","adjustWidth","height","adjustHeight","setDefaultPosition","createAxis","parent","axisType","axis","DataSet","HTMLElement","constructor","super","connectedCallback","disconnectedCallback","draw","this","parentElement","querySelector","pathType","path","point","join","removeAttribute","loadPathData","drawPath","axesTypes","axes","hAxis","vAxis","left","lowerAxis","upperAxis","top","bottom","right","drawAxes","axesInit","removeChild","axesArr","margin","padding","marginStart","marginEnd","paddingStart","paddingEnd","getDefaultAxesObj","find","createSVGElements","ChartEase","setStyles","g","createSVG","firstElementChild","lineHeight","customElements","get","define","adjust","low","high","open","close","abs"],"mappings":"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"}