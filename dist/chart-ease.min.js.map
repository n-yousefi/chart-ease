{"version":3,"file":"chart-ease.min.js","sources":["../docs/website/static/js/chart-ease.js"],"sourcesContent":["(function () {\n  'use strict';\n\n  function normalize(arr, normalizeGroups) {\r\n    const normalizedArr = arr.map((item) => {\r\n      return { ...item };\r\n    });\r\n\r\n    const arrKeys = Object.keys(arr[0]);\r\n    normalizedArr.forEach((item) => {\r\n      normalizeGroups.forEach((group) => {\r\n        arrKeys.forEach((key) => {\r\n          if (group.cols.includes(key)) {\r\n            item[key] = Math.round(normalizeNumber(item[key], group));\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    return normalizedArr;\r\n  }\r\n\r\n  function normalizeNumber(num, group) {\r\n    return ((num - group.min) / (group.max - group.min)) * (group.stop - group.start) + group.start;\r\n  }\n\n  function copyAttrs(from, to) {\r\n    Array.from(from.attributes).forEach((attr) => {\r\n      if (attr.value) to.setAttribute(attr.name, attr.value);\r\n    });\r\n  }\n\n  function copyStyles(from, to) {\r\n    if (from.style.cssText) to.style.cssText = from.style.cssText;\r\n  }\n\n  function cloneSVGElement(element) {\r\n    const newElement = document.createElementNS(\r\n      \"http://www.w3.org/2000/svg\",\r\n      element.tagName.toLowerCase()\r\n    );\r\n    copyAttrs(element, newElement);\r\n    copyStyles(element, newElement);\r\n    const children = Array.from(element.children);\r\n    children.forEach((child) => {\r\n      newElement.appendChild(cloneSVGElement(child));\r\n    });\r\n    return newElement;\r\n  }\n\n  function createSVGElements(tagName) {\r\n    return document.createElementNS(\"http://www.w3.org/2000/svg\", tagName);\r\n  }\n\n  /// path ///\r\n  const lineCommand = (point) => `L ${point.x} ${point.y}`;\r\n  const loadPathD = (path, points, command) => {\r\n    // build the d attributes by looping over the points\r\n    const d = points.reduce(\r\n      (acc, point, i, a) =>\r\n        i === 0\r\n          ? // if first point\r\n            `M ${point.x},${point.y}`\r\n          : // else\r\n            `${acc} ${command(point, i, a)}`,\r\n      \"\"\r\n    );\r\n    path.setAttribute(\"d\", d);\r\n  };\r\n\r\n  /// polyline ///\r\n  function loadPolylinePoints(node, points) {\r\n    node.setAttribute(\"points\", points.map((point) => `${point.x},${point.y}`).join(\" \"));\r\n  }\r\n\r\n  /// cubic-bezier ///\r\n  const line = (pointA, pointB) => {\r\n    const lengthX = pointB.x - pointA.x;\r\n    const lengthY = pointB.y - pointA.y;\r\n    return {\r\n      length: Math.sqrt(Math.pow(lengthX, 2) + Math.pow(lengthY, 2)),\r\n      angle: Math.atan2(lengthY, lengthX),\r\n    };\r\n  };\r\n\r\n  const controlPoint = (current, previous, next, reverse) => {\r\n    // When 'current' is the first or last point of the array\r\n    // 'previous' or 'next' don't exist.\r\n    // Replace with 'current'\r\n    const p = previous || current;\r\n    const n = next || current;\r\n    // The smoothing ratio\r\n    const smoothing = 0.05;\r\n    // Properties of the opposed-line\r\n    const o = line(p, n);\r\n    // If is end-control-point, add PI to the angle to go backward\r\n    const angle = o.angle + (reverse ? Math.PI : 0);\r\n    const length = o.length * smoothing;\r\n    // The control point position is relative to the current point\r\n    const x = current.x + Math.cos(angle) * length;\r\n    const y = current.y + Math.sin(angle) * length;\r\n    return [x, y];\r\n  };\r\n\r\n  const bezierCommand = (point, i, a) => {\r\n    // start control point\r\n    const [cpsX, cpsY] = controlPoint(a[i - 1], a[i - 2], point);\r\n    // end control point\r\n    const [cpeX, cpeY] = controlPoint(point, a[i - 1], a[i + 1], true);\r\n    return `C ${cpsX},${cpsY} ${cpeX},${cpeY} ${point.x},${point.y}`;\r\n  };\r\n\r\n  /// drawPath ///\r\n\r\n  function drawPath(pathType, dataset) {\r\n    if (!pathType) return;\r\n    const path = cloneSVGElement(pathType);\r\n    if (path.nodeName === \"path\") {\r\n      if (path.hasAttribute(\"data-style\") && path.getAttribute(\"data-style\") === \"smooth\")\r\n        loadPathD(path, dataset.normalizedData, bezierCommand);\r\n      else loadPathD(path, dataset.normalizedData, lineCommand);\r\n    } else if (path.nodeName === \"polyline\") loadPolylinePoints(path, dataset.normalizedData);\r\n    dataset.g.appendChild(path);\r\n  }\n\n  function flip(svg, shape) {\r\n    const { height } = svg.getBoundingClientRect();\r\n    if (shape.tagName.toLowerCase() == \"text\") {\r\n      shape.setAttribute(\"transform\", `scale(1,-1) translate(0, -${height})`);\r\n      shape.setAttribute(\"y\", height - parseFloat(shape.getAttribute(\"y\")));\r\n    }\r\n  }\n\n  function drawDataSet(dataset) {\r\n    let children = dataset.children;\r\n    if (children.length == 1 && children[0].nodeName === \"svg\") children = children[0].children;\r\n    Array.prototype.slice.call(children).forEach((element) => {\r\n      if (element.hasAttribute(\"data-drawn-as\") && element.getAttribute(\"data-drawn-as\") === \"edge\")\r\n        drawPath(element, dataset);\r\n      else drawPoints(dataset, element);\r\n    });\r\n  }\r\n\r\n  function drawPoints(dataset, element) {\r\n    const pointGroup = createSVGElements(\"g\");\r\n    dataset.normalizedData.forEach((row, index) => {\r\n      const ondraw = dataset[\"ondraw\"];\r\n      const shape = cloneSVGElement(element);\r\n      if (!ondraw) setDefaultPosition(shape, row.x, row.y);\r\n      else\r\n        ondraw({\r\n          shape,\r\n          row,\r\n          originalRow: dataset.originalData[index],\r\n          index,\r\n        });\r\n      pointGroup.appendChild(shape);\r\n      flip(pointGroup, shape);\r\n    });\r\n    dataset.g.appendChild(pointGroup);\r\n  }\r\n\r\n  function setDefaultPosition(shape, x, y) {\r\n    switch (shape.nodeName) {\r\n      case \"rect\":\r\n        if (x > 0) {\r\n          const width = Number(shape.getAttribute(\"width\"));\r\n          const adjustWidth = width > 0 ? x - width / 2 : x;\r\n          shape.setAttribute(\"x\", adjustWidth);\r\n        }\r\n        if (y > 0) {\r\n          const height = Number(shape.getAttribute(\"height\"));\r\n          const adjustHeight = height > 0 ? y - height / 2 : x;\r\n          shape.setAttribute(\"y\", adjustHeight);\r\n        }\r\n        break;\r\n      case \"circle\":\r\n      case \"ellipse\":\r\n        if (x > 0) shape.setAttribute(\"cx\", x);\r\n        if (y > 0) shape.setAttribute(\"cy\", y);\r\n      default:\r\n        if (x > 0) shape.setAttribute(\"x\", x);\r\n        if (y > 0) shape.setAttribute(\"y\", y);\r\n        break;\r\n    }\r\n  }\n\n  function setGroupsMinMax(data, groups) {\r\n    groups.forEach((group) => {\r\n      if (group.min == undefined) group.min = getKeysMin(data, group.cols);\r\n      if (group.max == undefined) group.max = getKeysMax(data, group.cols);\r\n    });\r\n  }\r\n\r\n  function getKeysMin(data, keys) {\r\n    let min = Number.MAX_VALUE;\r\n    for (let i = 1; i < data.length; i++) {\r\n      for (let j = 0; j < keys.length; j++) {\r\n        const keyMin = getKeyMin(data, keys[j]);\r\n        if (min > keyMin) min = keyMin;\r\n      }\r\n    }\r\n    return min;\r\n  }\r\n\r\n  function getKeysMax(data, keys) {\r\n    let max = Number.MIN_VALUE;\r\n    for (let i = 1; i < data.length; i++) {\r\n      for (let j = 0; j < keys.length; j++) {\r\n        const keyMax = getKeyMax(data, keys[j]);\r\n        if (keyMax > max) max = keyMax;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  function getKeyMin(data, key) {\r\n    let min = data[0][key];\r\n    for (let i = 1; i < data.length; i++) {\r\n      min = Math.min(min, data[i][key]);\r\n    }\r\n    return min;\r\n  }\r\n\r\n  function getKeyMax(data, key) {\r\n    let max = data[0][key];\r\n    for (let i = 1; i < data.length; i++) {\r\n      max = Math.max(max, data[i][key]);\r\n    }\r\n    return max;\r\n  }\n\n  class DataSet extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n\r\n    set data(data) {\r\n      this.hAxis = this.getDirection(\"h\");\r\n      this.vAxis = this.getDirection(\"v\");\r\n      this.originalData = data;\r\n      this.initData();\r\n      const directionGroups = [this.hAxis, this.vAxis];\r\n      setGroupsMinMax(this.originalData, directionGroups);\r\n      this.normalizedData = normalize(this.originalData, directionGroups);\r\n      this.render();\r\n    }\r\n\r\n    initData() {\r\n      if (typeof this.originalData[0] !== \"object\") {\r\n        this.originalData = this.originalData.map((item, index) => {\r\n          return { x: index + 1, y: item };\r\n        });\r\n      }\r\n      this.hAxis.cols.concat(this.vAxis.cols).forEach((col) => {\r\n        if (typeof this.originalData[0][col] === \"undefined\") {\r\n          this.originalData = this.originalData.map((item, index) => {\r\n            item[col] = index + 1;\r\n            return item;\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    render() {\r\n      this.init();\r\n      this.g.innerHTML = \"\";\r\n      drawDataSet(this);\r\n    }\r\n\r\n    init() {\r\n      const dataSet = this.parentElement.querySelector('g[name=\"dataset\"]');\r\n      if (!this.g) {\r\n        this.g = createSVGElements(\"g\");\r\n        dataSet.append(this.g);\r\n      }\r\n    }\r\n\r\n    getDirection(dir) {\r\n      let group = {\r\n        cols: this.getCols(dir),\r\n        start: this.getStart(dir),\r\n        stop: this.getStop(dir),\r\n      };\r\n      let axis = this.getAxis(dir);\r\n      if (axis) {\r\n        group = {\r\n          ...group,\r\n          min: axis.min,\r\n          max: axis.max,\r\n        };\r\n      }\r\n      return group;\r\n    }\r\n\r\n    getAxis(dir) {\r\n      if (dir === \"h\")\r\n        return this.parentElement.querySelector(\"bottom-axis\") ?? this.parentElement.querySelector(\"top-axis\");\r\n      return this.parentElement.querySelector(\"left-axis\") ?? this.parentElement.querySelector(\"right-axis\");\r\n    }\r\n    getStart(dir) {\r\n      if (dir === \"h\") return this.parentElement.margin.left;\r\n      return this.parentElement.margin.bottom;\r\n    }\r\n    getStop(dir) {\r\n      if (dir === \"h\") return this.parentElement.width - this.parentElement.margin.right;\r\n      return this.parentElement.height - this.parentElement.margin.top;\r\n    }\r\n    getCols(dir) {\r\n      if (dir === \"h\") return this.getAttribute(\"hAxis\") ? this.getAttribute(\"hAxis\").split(\",\") : [\"x\"];\r\n      return this.getAttribute(\"vAxis\") ? this.getAttribute(\"vAxis\").split(\",\") : [\"y\"];\r\n    }\r\n  }\n\n  class CandleStick extends DataSet {\r\n    constructor() {\r\n      super();\r\n      this.adjust();\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n\r\n    adjust() {\r\n      this.appendChild(createSVGElements(\"line\"));\r\n      this.appendChild(createSVGElements(\"rect\"));\r\n      this.ondraw = ({ shape, row }) => {\r\n        switch (shape.tagName) {\r\n          case \"line\":\r\n            shape.setAttribute(\"x1\", row.x + 5);\r\n            shape.setAttribute(\"x2\", row.x + 5);\r\n            shape.setAttribute(\"y1\", row.low);\r\n            shape.setAttribute(\"y2\", row.high);\r\n            shape.setAttribute(\r\n              \"stroke\",\r\n              row.open > row.close ? \"#28A69A\" : \"#EE5355\"\r\n            );\r\n            break;\r\n          case \"rect\":\r\n            shape.setAttribute(\"width\", 10);\r\n            shape.setAttribute(\"height\", Math.abs(row.open - row.close));\r\n            shape.setAttribute(\"x\", row.x);\r\n            shape.setAttribute(\"y\", row.open);\r\n            shape.setAttribute(\r\n              \"fill\",\r\n              row.open > row.close ? \"#28A69A\" : \"#EE5355\"\r\n            );\r\n            break;\r\n        }\r\n      };\r\n      this.axes = [\r\n        { cols: [\"x\"], length: 200, margin: 10 },\r\n        {\r\n          cols: [\"low\", \"open\", \"close\", \"high\"],\r\n          length: 200,\r\n          margin: 10,\r\n        },\r\n      ];\r\n    }\r\n  }\n\n  const WIDTH = 200;\r\n  const HEIGHT = 200;\r\n  const MARGIN = 10;\n\n  function createSVG(chart) {\r\n    chart.svg = appendSVG(chart.width, chart.height);\r\n    chart.appendChild(chart.svg);\r\n    appendG(chart.svg, \"grid\");\r\n    appendG(chart.svg, \"dataset\");\r\n    appendG(chart.svg, \"axes\");\r\n\r\n    chart.dispatchEvent(new Event(\"created\"));\r\n  }\r\n\r\n  function appendSVG(width, height) {\r\n    const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n    svg.setAttribute(\"width\", width);\r\n    svg.setAttribute(\"height\", height);\r\n    svg.setAttribute(\"transform\", \"scale(1,-1)\");\r\n    return svg;\r\n  }\r\n\r\n  function appendG(svg, name) {\r\n    const g = createSVGElements(\"g\");\r\n    g.setAttribute(\"name\", name);\r\n    svg.appendChild(g);\r\n  }\n\n  function drawAxisLine(axis, group) {\r\n    const g = createSVGElements(\"g\");\r\n    if (!axis.line) return;\r\n    const axisLine = cloneSVGElement(axis.line);\r\n    if (axis.isVertical) {\r\n      axisLine.setAttribute(\"x1\", axis.position);\r\n      axisLine.setAttribute(\"x2\", axis.position);\r\n      axisLine.setAttribute(\"y1\", axis.start);\r\n      axisLine.setAttribute(\"y2\", axis.stop);\r\n    } else {\r\n      axisLine.setAttribute(\"x1\", axis.start);\r\n      axisLine.setAttribute(\"x2\", axis.stop);\r\n      axisLine.setAttribute(\"y1\", axis.position);\r\n      axisLine.setAttribute(\"y2\", axis.position);\r\n    }\r\n\r\n    g.appendChild(axisLine);\r\n    group.appendChild(g);\r\n  }\n\n  function drawTicks(axis, group) {\r\n    const g = createSVGElements(\"g\");\r\n    axis.ticks.forEach((tick) => {\r\n      if (!axis.tick) return;\r\n      const tl = cloneSVGElement(axis.tick);\r\n      const height = Number(tl.getAttribute(\"height\") || 0);\r\n      const width = Number(tl.getAttribute(\"width\") || 0);\r\n      const offset = axis.line?.getAttribute(\"stroke-width\") || 0;\r\n      if (axis.isVertical) {\r\n        tl.setAttribute(\"x\", axis.position - offset);\r\n        tl.setAttribute(\"y\", tick.position - height / 2);\r\n      } else {\r\n        tl.setAttribute(\"x\", tick.position - width / 2);\r\n        tl.setAttribute(\"y\", axis.position - offset);\r\n      }\r\n      g.appendChild(tl);\r\n    });\r\n\r\n    group.appendChild(g);\r\n  }\n\n  function drawGridLines(axis, group) {\r\n    const g = createSVGElements(\"g\");\r\n    if (axis.grid) {\r\n      axis.ticks.forEach((tick) => {\r\n        if (!axis.grid) return;\r\n        const tl = cloneSVGElement(axis.grid);\r\n        if (axis.isVertical) {\r\n          tl.setAttribute(\"x1\", axis.gridStart);\r\n          tl.setAttribute(\"x2\", axis.gridStop);\r\n          tl.setAttribute(\"y1\", tick.position);\r\n          tl.setAttribute(\"y2\", tick.position);\r\n        } else {\r\n          tl.setAttribute(\"x1\", tick.position);\r\n          tl.setAttribute(\"x2\", tick.position);\r\n          tl.setAttribute(\"y1\", axis.gridStart);\r\n          tl.setAttribute(\"y2\", axis.gridStop);\r\n        }\r\n        g.appendChild(tl);\r\n      });\r\n    }\r\n    group.appendChild(g);\r\n  }\n\n  function drawLabels(axis, group) {\r\n    const g = createSVGElements(\"g\");\r\n    group.appendChild(g);\r\n    axis.ticks.forEach((tick) => {\r\n      if (!axis.label) return;\r\n      const text = cloneSVGElement(axis.label);\r\n      text.innerHTML = tick.value;\r\n      g.appendChild(text);\r\n      let { width, height } = text.getBoundingClientRect();\r\n      const tickWidth = axis.tick?.getAttribute(\"width\") || 0;\r\n      const tickHeight = axis.tick?.getAttribute(\"height\") || 0;\r\n      switch (axis.direction) {\r\n        case \"left\":\r\n          width += width / tick.value.toString().length;\r\n          text.setAttribute(\"x\", axis.position - width - tickWidth / 2);\r\n          text.setAttribute(\"y\", tick.position - height / 3);\r\n          break;\r\n        case \"right\":\r\n          text.setAttribute(\"x\", axis.position + tickWidth / 2 + 5);\r\n          text.setAttribute(\"y\", tick.position - height / 3);\r\n          break;\r\n        case \"bottom\":\r\n          text.setAttribute(\"x\", tick.position - width / 2);\r\n          text.setAttribute(\"y\", axis.position - height - tickHeight / 2);\r\n          break;\r\n        case \"top\":\r\n          text.setAttribute(\"x\", tick.position - width / 2);\r\n          text.setAttribute(\"y\", axis.position + tickHeight + 5);\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n      flip(group, text);\r\n    });\r\n  }\n\n  class ChartAxis extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n      this.parentElement.addEventListener(\"created\", (e) => {\r\n        this.render();\r\n      });\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n\r\n    render() {\r\n      const group = this.parentElement.querySelector('g[name=\"axes\"]');\r\n      const grid = this.parentElement.querySelector('g[name=\"grid\"]');\r\n      this.setTickPositions();\r\n      drawAxisLine(this, group);\r\n      if (this.ticks.length > 0) {\r\n        drawTicks(this, group);\r\n        drawLabels(this, group);\r\n        drawGridLines(this, grid);\r\n      }\r\n    }\r\n\r\n    setTickPositions() {\r\n      this.ticks = [];\r\n      const ticks = parseInt(this.getAttribute(\"ticks\") ?? 0);\r\n      if (ticks <= 0) return;\r\n      const tickSize = Math.round((this.max - this.min) / (ticks - 1));\r\n      let value = this.min;\r\n      let position = this.start;\r\n      while (true) {\r\n        position = ((value - this.min) / (this.max - this.min)) * (this.stop - this.start) + this.start;\r\n        if (position > this.stop || isNaN(position)) break;\r\n        this.ticks.push({ value, position });\r\n        value += tickSize;\r\n      }\r\n    }\r\n\r\n    get min() {\r\n      return parseInt(this.getAttribute(\"min\") ?? 0);\r\n    }\r\n    get max() {\r\n      return parseInt(this.getAttribute(\"max\") ?? 0);\r\n    }\r\n    get label() {\r\n      return this.querySelector(\"text\");\r\n    }\r\n    get grid() {\r\n      return this.querySelector(`line[grid-line]`);\r\n    }\r\n    get line() {\r\n      return this.querySelector(\"line[axis-line]\");\r\n    }\r\n    get tick() {\r\n      return this.querySelector(\"rect[axis-tick]\");\r\n    }\r\n    get margin() {\r\n      return this.parentElement.margin;\r\n    }\r\n    get height() {\r\n      return this.parentElement.height;\r\n    }\r\n    get width() {\r\n      return this.parentElement.width;\r\n    }\r\n  }\n\n  class LeftAxis extends ChartAxis {\r\n    constructor() {\r\n      super();\r\n    }\r\n\r\n    get start() {\r\n      return this.margin.bottom;\r\n    }\r\n\r\n    get stop() {\r\n      return this.height - this.margin.top;\r\n    }\r\n\r\n    get position() {\r\n      return this.margin.left;\r\n    }\r\n\r\n    get gridStart() {\r\n      return this.margin.left;\r\n    }\r\n\r\n    get gridStop() {\r\n      return this.width - this.margin.right;\r\n    }\r\n\r\n    get isVertical() {\r\n      return true;\r\n    }\r\n\r\n    get direction() {\r\n      return \"left\";\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n  }\n\n  class RightAxis extends ChartAxis {\r\n    constructor() {\r\n      super();\r\n    }\r\n\r\n    get start() {\r\n      return this.margin.bottom;\r\n    }\r\n\r\n    get stop() {\r\n      return this.height - this.margin.top;\r\n    }\r\n\r\n    get position() {\r\n      return this.width - this.margin.right;\r\n    }\r\n\r\n    get gridStart() {\r\n      return this.margin.left;\r\n    }\r\n\r\n    get gridStop() {\r\n      return this.width - this.margin.right;\r\n    }\r\n\r\n    get isVertical() {\r\n      return true;\r\n    }\r\n\r\n    get direction() {\r\n      return \"right\";\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n  }\n\n  class TopAxis extends ChartAxis {\r\n    constructor() {\r\n      super();\r\n    }\r\n\r\n    get start() {\r\n      return this.margin.left;\r\n    }\r\n\r\n    get stop() {\r\n      return this.width - this.margin.right;\r\n    }\r\n\r\n    get position() {\r\n      return this.height - this.margin.top;\r\n    }\r\n\r\n    get gridStart() {\r\n      return this.margin.bottom;\r\n    }\r\n\r\n    get gridStop() {\r\n      return this.height - this.margin.top;\r\n    }\r\n\r\n    get isVertical() {\r\n      return false;\r\n    }\r\n\r\n    get direction() {\r\n      return \"top\";\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n  }\n\n  class BottomAxis extends ChartAxis {\r\n    constructor() {\r\n      super();\r\n    }\r\n\r\n    get start() {\r\n      return this.margin.left;\r\n    }\r\n\r\n    get stop() {\r\n      return this.width - this.margin.right;\r\n    }\r\n\r\n    get position() {\r\n      return this.margin.bottom;\r\n    }\r\n\r\n    get gridStart() {\r\n      return this.margin.bottom;\r\n    }\r\n\r\n    get gridStop() {\r\n      return this.height - this.margin.top;\r\n    }\r\n\r\n    get isVertical() {\r\n      return false;\r\n    }\r\n\r\n    get direction() {\r\n      return \"bottom\";\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n  }\n\n  class ChartEase extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n    }\r\n\r\n    connectedCallback() {\r\n      this.setStyles();\r\n      createSVG(this);\r\n    }\r\n\r\n    disconnectedCallback() {}\r\n\r\n    get height() {\r\n      return parseFloat(this.getAttribute(\"height\") ?? HEIGHT);\r\n    }\r\n    get width() {\r\n      return parseFloat(this.getAttribute(\"width\") ?? WIDTH);\r\n    }\r\n    get margin() {\r\n      const getAxisWidth = (name) => parseFloat(this.querySelector(name)?.getAttribute(\"width\")) || 0;\r\n      const getAxisHeight = (name) => parseFloat(this.querySelector(name)?.getAttribute(\"height\")) || 0;\r\n      const getMargin = (name) => parseFloat(this.getAttribute(name) ?? this.getAttribute(\"margin\") ?? MARGIN);\r\n      const margin = {\r\n        top: getAxisHeight(\"top-axis\") + getMargin(\"margin-top\"),\r\n        bottom: getAxisHeight(\"bottom-axis\") + getMargin(\"margin-bottom\"),\r\n        left: getAxisWidth(\"left-axis\") + getMargin(\"margin-left\"),\r\n        right: getAxisWidth(\"right-axis\") + getMargin(\"margin-right\"),\r\n      };\r\n      return margin;\r\n    }\r\n\r\n    setStyles() {\r\n      this.style.lineHeight = 0;\r\n    }\r\n  }\r\n\r\n  customElements.get(\"left-axis\") ?? customElements.define(\"left-axis\", LeftAxis);\r\n  customElements.get(\"right-axis\") ?? customElements.define(\"right-axis\", RightAxis);\r\n  customElements.get(\"top-axis\") ?? customElements.define(\"top-axis\", TopAxis);\r\n  customElements.get(\"bottom-axis\") ?? customElements.define(\"bottom-axis\", BottomAxis);\r\n\r\n  customElements.get(\"data-set\") ?? customElements.define(\"data-set\", DataSet);\r\n  customElements.get(\"chart-ease\") ?? customElements.define(\"chart-ease\", ChartEase);\r\n  customElements.get(\"candle-stick\") ?? customElements.define(\"candle-stick\", CandleStick);\n\n  return ChartEase;\n\n})();\n//# sourceMappingURL=chart-ease.js.map\n"],"names":["cloneSVGElement","element","newElement","document","createElementNS","tagName","toLowerCase","from","to","Array","attributes","forEach","attr","value","setAttribute","name","style","cssText","copyStyles","children","child","appendChild","createSVGElements","lineCommand","point","x","y","loadPathD","path","points","command","d","reduce","acc","i","a","controlPoint","current","previous","next","reverse","o","pointA","pointB","lengthX","lengthY","length","Math","sqrt","pow","angle","atan2","line","PI","cos","sin","bezierCommand","cpsX","cpsY","cpeX","cpeY","flip","svg","shape","height","getBoundingClientRect","parseFloat","getAttribute","drawDataSet","dataset","nodeName","prototype","slice","call","hasAttribute","pathType","node","normalizedData","map","join","g","drawPath","pointGroup","row","index","ondraw","originalRow","originalData","width","Number","adjustWidth","adjustHeight","setDefaultPosition","drawPoints","setGroupsMinMax","data","groups","group","undefined","min","keys","MAX_VALUE","j","keyMin","getKeyMin","getKeysMin","cols","max","MIN_VALUE","keyMax","getKeyMax","getKeysMax","key","DataSet","HTMLElement","constructor","super","connectedCallback","disconnectedCallback","this","hAxis","getDirection","vAxis","initData","directionGroups","arr","normalizeGroups","normalizedArr","item","arrKeys","Object","includes","round","num","stop","start","normalizeNumber","normalize","render","concat","col","init","innerHTML","dataSet","parentElement","querySelector","append","dir","getCols","getStart","getStop","axis","getAxis","margin","left","bottom","right","top","split","createSVG","chart","appendSVG","appendG","dispatchEvent","Event","ChartAxis","addEventListener","e","grid","setTickPositions","axisLine","isVertical","position","drawAxisLine","ticks","tick","tl","offset","drawTicks","label","text","tickWidth","tickHeight","direction","toString","drawLabels","gridStart","gridStop","drawGridLines","parseInt","tickSize","isNaN","push","ChartEase","setStyles","getAxisWidth","getAxisHeight","getMargin","lineHeight","customElements","get","define","adjust","low","high","open","close","abs","axes"],"mappings":"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"}