{"version":3,"file":"chart-ease.min.js","sources":["../site/js/chart-ease.js"],"sourcesContent":["(function () {\n  'use strict';\n\n  function normalize(arr, normalizeGroups) {\r\n    const normalizedArr = arr.map((item) => {\r\n      return { ...item };\r\n    });\r\n\r\n    const arrKeys = Object.keys(arr[0]);\r\n    normalizedArr.forEach((item) => {\r\n      normalizeGroups.forEach((group) => {\r\n        arrKeys.forEach((key) => {\r\n          if (group.cols.includes(key)) {\r\n            item[key] = Math.round(normalizeNumber(item[key], group));\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    return normalizedArr;\r\n  }\r\n\r\n  function normalizeNumber(num, group) {\r\n    return ((num - group.min) / (group.max - group.min)) * (group.stop - group.start) + group.start;\r\n  }\n\n  function copyAttrs(from, to) {\r\n    Array.from(from.attributes).forEach((attr) => {\r\n      if (attr.value) to.setAttribute(attr.name, attr.value);\r\n    });\r\n  }\n\n  function copyStyles(from, to) {\r\n    if (from.style.cssText) to.style.cssText = from.style.cssText;\r\n  }\n\n  function cloneSVGElement(element) {\r\n    const newElement = document.createElementNS(\r\n      \"http://www.w3.org/2000/svg\",\r\n      element.tagName.toLowerCase()\r\n    );\r\n    copyAttrs(element, newElement);\r\n    copyStyles(element, newElement);\r\n    const children = Array.from(element.children);\r\n    children.forEach((child) => {\r\n      newElement.appendChild(cloneSVGElement(child));\r\n    });\r\n    return newElement;\r\n  }\n\n  function createSVGElements(tagName) {\r\n    return document.createElementNS(\"http://www.w3.org/2000/svg\", tagName);\r\n  }\n\n  function flip(svg, shape) {\r\n    const { height } = svg.getBoundingClientRect();\r\n    if (shape.tagName.toLowerCase() == \"text\") {\r\n      shape.setAttribute(\"transform\", `scale(1,-1) translate(0, -${height})`);\r\n      shape.setAttribute(\"y\", height - parseFloat(shape.getAttribute(\"y\")));\r\n    }\r\n  }\n\n  function drawPoints(svg, pointTypes, data, originalData, ondraw) {\r\n    const g = createSVGElements(\"g\");\r\n    data.forEach((row, index) => {\r\n      pointTypes.forEach((pointType) => {\r\n        const shape = cloneSVGElement(pointType);\r\n        if (!ondraw) setDefaultPosition(shape, row.x, row.y);\r\n        else\r\n          ondraw({\r\n            shape,\r\n            row,\r\n            originalRow: originalData[index],\r\n            index,\r\n          });\r\n        g.appendChild(shape);\r\n        flip(svg, shape);\r\n      });\r\n    });\r\n    svg.appendChild(g);\r\n  }\r\n\r\n  function setDefaultPosition(shape, x, y) {\r\n    switch (shape.nodeName) {\r\n      case \"rect\":\r\n        if (x > 0) {\r\n          const width = Number(shape.getAttribute(\"width\"));\r\n          const adjustWidth = width > 0 ? x - width / 2 : x;\r\n          shape.setAttribute(\"x\", adjustWidth);\r\n        }\r\n        if (y > 0) {\r\n          const height = Number(shape.getAttribute(\"height\"));\r\n          const adjustHeight = height > 0 ? y - height / 2 : x;\r\n          shape.setAttribute(\"y\", adjustHeight);\r\n        }\r\n        break;\r\n      case \"circle\":\r\n      case \"ellipse\":\r\n        if (x > 0) shape.setAttribute(\"cx\", x);\r\n        if (y > 0) shape.setAttribute(\"cy\", y);\r\n      default:\r\n        if (x > 0) shape.setAttribute(\"x\", x);\r\n        if (y > 0) shape.setAttribute(\"y\", y);\r\n        break;\r\n    }\r\n  }\n\n  function drawPath(parent, pathType, data) {\r\n    if (!pathType) return;\r\n    const path = cloneSVGElement(pathType);\r\n    loadPathData(path, data);\r\n    parent.appendChild(path);\r\n  }\r\n\r\n  function loadPathData(path, data) {\r\n    path.setAttribute(\r\n      \"d\",\r\n      data\r\n        .map((point, index) => (index === 0 ? `M ${point.x} ${point.y}` : ` L ${point.x} ${point.y}`))\r\n        .join(\" \")\r\n    );\r\n    path.removeAttribute(\"is\");\r\n  }\n\n  function setGroupsMinMax(data, groups) {\r\n    groups.forEach((group) => {\r\n      if (group.min == undefined) group.min = getKeysMin(data, group.cols);\r\n      if (group.max == undefined) group.max = getKeysMax(data, group.cols);\r\n    });\r\n  }\r\n\r\n  function getKeysMin(data, keys) {\r\n    let min = Number.MAX_VALUE;\r\n    for (let i = 1; i < data.length; i++) {\r\n      for (let j = 0; j < keys.length; j++) {\r\n        const keyMin = getKeyMin(data, keys[j]);\r\n        if (min > keyMin) min = keyMin;\r\n      }\r\n    }\r\n    return min;\r\n  }\r\n\r\n  function getKeysMax(data, keys) {\r\n    let max = Number.MIN_VALUE;\r\n    for (let i = 1; i < data.length; i++) {\r\n      for (let j = 0; j < keys.length; j++) {\r\n        const keyMax = getKeyMax(data, keys[j]);\r\n        if (keyMax > max) max = keyMax;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  function getKeyMin(data, key) {\r\n    let min = data[0][key];\r\n    for (let i = 1; i < data.length; i++) {\r\n      min = Math.min(min, data[i][key]);\r\n    }\r\n    return min;\r\n  }\r\n\r\n  function getKeyMax(data, key) {\r\n    let max = data[0][key];\r\n    for (let i = 1; i < data.length; i++) {\r\n      max = Math.max(max, data[i][key]);\r\n    }\r\n    return max;\r\n  }\n\n  class DataSet extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n\r\n    set data(originalData) {\r\n      const normalizeGroups = this.getNormalizeGroups();\r\n      setGroupsMinMax(originalData, normalizeGroups);\r\n      if (this[\"ondataSet\"]) this[\"ondataSet\"]();\r\n      const data = normalize(originalData, normalizeGroups);\r\n      const svg = this.parentElement.querySelector(\"svg\");\r\n      drawPath(svg, this.pathType, data);\r\n      drawPoints(svg, this.pointTypes, data, originalData, this[\"ondraw\"]);\r\n      this.parentElement.removeChild(this);\r\n    }\r\n\r\n    getNormalizeGroups() {\r\n      const margin = this.parentElement.margin;\r\n      let h = {\r\n        cols: this.getAttribute(\"hAxis\") ? this.getAttribute(\"hAxis\").split(\",\") : [\"x\"],\r\n        start: margin.left,\r\n        stop: this.parentElement.width - margin.right,\r\n      };\r\n      let hAxis = this.parentElement.querySelector(\"bottom-axis\") ?? this.parentElement.querySelector(\"top-axis\");\r\n      if (hAxis) {\r\n        h = {\r\n          ...h,\r\n          min: hAxis.min,\r\n          max: hAxis.max,\r\n        };\r\n      }\r\n      let v = {\r\n        cols: this.getAttribute(\"vAxis\") ? this.getAttribute(\"vAxis\").split(\",\") : [\"y\"],\r\n        start: margin.bottom,\r\n        stop: this.parentElement.height - margin.top,\r\n      };\r\n      let vAxis = this.parentElement.querySelector(\"left-axis\") ?? this.parentElement.querySelector(\"right-axis\");\r\n      if (vAxis) {\r\n        v = {\r\n          ...v,\r\n          min: vAxis.min,\r\n          max: vAxis.max,\r\n        };\r\n      }\r\n      return [h, v];\r\n    }\r\n\r\n    get pathType() {\r\n      return this.querySelector(`path[is=\"path-type\"]`);\r\n    }\r\n\r\n    get pointTypes() {\r\n      return Array.from(this.children).filter((item) => !item.getAttribute(\"is\"));\r\n    }\r\n  }\n\n  class CandleStick extends DataSet {\r\n    constructor() {\r\n      super();\r\n      this.adjust();\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n\r\n    adjust() {\r\n      this.appendChild(createSVGElements(\"line\"));\r\n      this.appendChild(createSVGElements(\"rect\"));\r\n      this.ondraw = ({ shape, row }) => {\r\n        switch (shape.tagName) {\r\n          case \"line\":\r\n            shape.setAttribute(\"x1\", row.x + 5);\r\n            shape.setAttribute(\"x2\", row.x + 5);\r\n            shape.setAttribute(\"y1\", row.low);\r\n            shape.setAttribute(\"y2\", row.high);\r\n            shape.setAttribute(\r\n              \"stroke\",\r\n              row.open > row.close ? \"#28A69A\" : \"#EE5355\"\r\n            );\r\n            break;\r\n          case \"rect\":\r\n            shape.setAttribute(\"width\", 10);\r\n            shape.setAttribute(\"height\", Math.abs(row.open - row.close));\r\n            shape.setAttribute(\"x\", row.x);\r\n            shape.setAttribute(\"y\", row.open);\r\n            shape.setAttribute(\r\n              \"fill\",\r\n              row.open > row.close ? \"#28A69A\" : \"#EE5355\"\r\n            );\r\n            break;\r\n        }\r\n      };\r\n      this.axes = [\r\n        { cols: [\"x\"], length: 200, margin: 10 },\r\n        {\r\n          cols: [\"low\", \"open\", \"close\", \"high\"],\r\n          length: 200,\r\n          margin: 10,\r\n        },\r\n      ];\r\n    }\r\n  }\n\n  const WIDTH = 200;\r\n  const HEIGHT = 200;\r\n  const MARGIN = 10;\n\n  function createSVG(width, height) {\r\n    const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n    svg.setAttribute(\"width\", width);\r\n    svg.setAttribute(\"height\", height);\r\n    svg.setAttribute(\"transform\", \"scale(1,-1)\");\r\n    return svg;\r\n  }\n\n  function drawAxisLine(axis) {\r\n    const g = createSVGElements(\"g\");\r\n    if (!axis.type) return;\r\n    const axisLine = cloneSVGElement(axis.type);\r\n    if (axis.isVertical) {\r\n      axisLine.setAttribute(\"x1\", axis.position);\r\n      axisLine.setAttribute(\"x2\", axis.position);\r\n      axisLine.setAttribute(\"y1\", axis.start);\r\n      axisLine.setAttribute(\"y2\", axis.stop);\r\n    } else {\r\n      axisLine.setAttribute(\"x1\", axis.start);\r\n      axisLine.setAttribute(\"x2\", axis.stop);\r\n      axisLine.setAttribute(\"y1\", axis.position);\r\n      axisLine.setAttribute(\"y2\", axis.position);\r\n    }\r\n\r\n    g.appendChild(axisLine);\r\n    axis.parentElement.svg.appendChild(g);\r\n  }\n\n  function drawTicks(axis) {\r\n    const g = createSVGElements(\"g\");\r\n    axis.ticks.forEach((tick) => {\r\n      if (!axis.type) return;\r\n      const tl = cloneSVGElement(axis.type);\r\n      if (axis.isVertical) {\r\n        tl.setAttribute(\"x1\", axis.position - 5);\r\n        tl.setAttribute(\"x2\", axis.position + 5);\r\n        tl.setAttribute(\"y1\", tick.position);\r\n        tl.setAttribute(\"y2\", tick.position);\r\n      } else {\r\n        tl.setAttribute(\"x1\", tick.position);\r\n        tl.setAttribute(\"x2\", tick.position);\r\n        tl.setAttribute(\"y1\", axis.position - 5);\r\n        tl.setAttribute(\"y2\", axis.position + 5);\r\n      }\r\n      g.appendChild(tl);\r\n    });\r\n\r\n    axis.parentElement.svg.appendChild(g);\r\n  }\n\n  function drawGridLines(axis) {\r\n    const g = createSVGElements(\"g\");\r\n    if (axis.grid) {\r\n      axis.ticks.forEach((tick) => {\r\n        if (!axis.grid) return;\r\n        const tl = cloneSVGElement(axis.grid);\r\n        if (axis.isVertical) {\r\n          tl.setAttribute(\"x1\", axis.gridStart);\r\n          tl.setAttribute(\"x2\", axis.gridStop);\r\n          tl.setAttribute(\"y1\", tick.position);\r\n          tl.setAttribute(\"y2\", tick.position);\r\n        } else {\r\n          tl.setAttribute(\"x1\", tick.position);\r\n          tl.setAttribute(\"x2\", tick.position);\r\n          tl.setAttribute(\"y1\", axis.gridStart);\r\n          tl.setAttribute(\"y2\", axis.gridStop);\r\n        }\r\n        g.appendChild(tl);\r\n      });\r\n    }\r\n    axis.parentElement.svg.appendChild(g);\r\n  }\n\n  function drawLabels(axis) {\r\n    const svg = axis.parentElement.svg;\r\n    const g = createSVGElements(\"g\");\r\n    svg.appendChild(g);\r\n    axis.ticks.forEach((tick) => {\r\n      if (!axis.label) return;\r\n      const text = cloneSVGElement(axis.label);\r\n      text.innerHTML = tick.value;\r\n      g.appendChild(text);\r\n      const { width, height } = text.getBoundingClientRect();\r\n      switch (axis.direction) {\r\n        case \"right\":\r\n          text.setAttribute(\"x\", axis.position + 7);\r\n          text.setAttribute(\"y\", tick.position - height / 3);\r\n          break;\r\n        case \"left\":\r\n          text.setAttribute(\"x\", axis.position - width - 7);\r\n          text.setAttribute(\"y\", tick.position - height / 3);\r\n          break;\r\n        case \"top\":\r\n          text.setAttribute(\"x\", tick.position - width / 2);\r\n          text.setAttribute(\"y\", axis.position + 7);\r\n          break;\r\n        case \"bottom\":\r\n          text.setAttribute(\"x\", tick.position - width / 2);\r\n          text.setAttribute(\"y\", axis.position - height);\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n      flip(svg, text);\r\n    });\r\n  }\n\n  class ChartAxis extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n      this.init();\r\n      this.parentElement.addEventListener(\"created\", (e) => {\r\n        this.render();\r\n      });\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n\r\n    render() {\r\n      this.setTickPositions();\r\n      drawAxisLine(this);\r\n      if (this.ticks.length > 0) {\r\n        drawTicks(this);\r\n        drawLabels(this);\r\n        drawGridLines(this);\r\n      }\r\n    }\r\n\r\n    init() {\r\n      const pE = this.parentElement;\r\n      this.height = parseFloat(pE.getAttribute(\"height\") ?? HEIGHT);\r\n      this.width = parseFloat(pE.getAttribute(\"width\") ?? WIDTH);\r\n      this.margin = {\r\n        top: parseFloat(pE.getAttribute(\"margin-top\") ?? pE.getAttribute(\"margin\") ?? MARGIN),\r\n        bottom: parseFloat(pE.getAttribute(\"margin-bottom\") ?? pE.getAttribute(\"margin\") ?? MARGIN),\r\n        left: parseFloat(pE.getAttribute(\"margin-left\") ?? pE.getAttribute(\"margin\") ?? MARGIN),\r\n        right: parseFloat(pE.getAttribute(\"margin-right\") ?? pE.getAttribute(\"margin\") ?? MARGIN),\r\n      };\r\n      this.min = parseInt(this.getAttribute(\"min\") ?? 0);\r\n      this.max = parseInt(this.getAttribute(\"max\") ?? 0);\r\n      this.type = this.querySelector(\"line[axis-line]\");\r\n      this.label = this.querySelector(\"text\");\r\n      this.grid = this.querySelector(`line[grid-line]`);\r\n    }\r\n\r\n    setTickPositions() {\r\n      this.ticks = [];\r\n      const ticks = parseInt(this.getAttribute(\"ticks\") ?? 0);\r\n      if (ticks <= 0) return;\r\n      const tickSize = Math.round((this.max - this.min) / (ticks - 1));\r\n      let value = this.min;\r\n      let position = this.start;\r\n      while (true) {\r\n        position = ((value - this.min) / (this.max - this.min)) * (this.stop - this.start) + this.start;\r\n        if (position > this.stop) break;\r\n        this.ticks.push({ value, position });\r\n        value += tickSize;\r\n      }\r\n    }\r\n  }\n\n  class LeftAxis extends ChartAxis {\r\n    constructor() {\r\n      super();\r\n      this.start = this.margin.bottom;\r\n      this.stop = this.height - this.margin.top;\r\n      this.position = this.margin.left;\r\n      this.gridStart = this.margin.left;\r\n      this.gridStop = this.width - this.margin.right;\r\n      this.isVertical = true;\r\n      this.direction = \"left\";\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n  }\n\n  class RightAxis extends ChartAxis {\r\n    constructor() {\r\n      super();\r\n      this.start = this.margin.bottom;\r\n      this.stop = this.height - this.margin.top;\r\n      this.position = this.width - this.margin.right;\r\n      this.gridStart = this.margin.left;\r\n      this.gridStop = this.width - this.margin.right;\r\n      this.isVertical = true;\r\n      this.direction = \"right\";\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n  }\n\n  class TopAxis extends ChartAxis {\r\n    constructor() {\r\n      super();\r\n      this.start = this.margin.left;\r\n      this.stop = this.width - this.margin.right;\r\n      this.position = this.height - this.margin.top;\r\n      this.gridStart = this.margin.bottom;\r\n      this.gridStop = this.height - this.margin.top;\r\n      this.isVertical = false;\r\n      this.direction = \"top\";\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n  }\n\n  class BottomAxis extends ChartAxis {\r\n    constructor() {\r\n      super();\r\n      this.start = this.margin.left;\r\n      this.stop = this.width - this.margin.right;\r\n      this.position = this.margin.bottom;\r\n      this.gridStart = this.margin.bottom;\r\n      this.gridStop = this.height - this.margin.top;\r\n      this.isVertical = false;\r\n      this.direction = \"bottom\";\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n  }\n\n  class ChartEase extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n      this.setStyles();\r\n      this.height = parseFloat(this.getAttribute(\"height\") ?? HEIGHT);\r\n      this.width = parseFloat(this.getAttribute(\"width\") ?? WIDTH);\r\n      this.margin = {\r\n        top: parseFloat(this.getAttribute(\"margin-top\") ?? this.getAttribute(\"margin\") ?? MARGIN),\r\n        bottom: parseFloat(this.getAttribute(\"margin-bottom\") ?? this.getAttribute(\"margin\") ?? MARGIN),\r\n        left: parseFloat(this.getAttribute(\"margin-left\") ?? this.getAttribute(\"margin\") ?? MARGIN),\r\n        right: parseFloat(this.getAttribute(\"margin-right\") ?? this.getAttribute(\"margin\") ?? MARGIN),\r\n      };\r\n      this.svg = createSVG(this.width, this.height);\r\n      this.appendChild(this.svg);\r\n      this.dispatchEvent(new Event(\"created\"));\r\n    }\r\n\r\n    disconnectedCallback() {}\r\n\r\n    set ondraw(ondraw) {\r\n      this.querySelector(\"data-set\").ondraw = ondraw;\r\n    }\r\n    set data(data) {\r\n      this.querySelector(\"data-set\").data = data;\r\n    }\r\n\r\n    setStyles() {\r\n      this.style.lineHeight = 0;\r\n    }\r\n  }\r\n\r\n  customElements.get(\"left-axis\") ?? customElements.define(\"left-axis\", LeftAxis);\r\n  customElements.get(\"right-axis\") ?? customElements.define(\"right-axis\", RightAxis);\r\n  customElements.get(\"top-axis\") ?? customElements.define(\"top-axis\", TopAxis);\r\n  customElements.get(\"bottom-axis\") ?? customElements.define(\"bottom-axis\", BottomAxis);\r\n\r\n  customElements.get(\"data-set\") ?? customElements.define(\"data-set\", DataSet);\r\n  customElements.get(\"chart-ease\") ?? customElements.define(\"chart-ease\", ChartEase);\r\n  customElements.get(\"candle-stick\") ?? customElements.define(\"candle-stick\", CandleStick);\n\n  return ChartEase;\n\n})();\n//# sourceMappingURL=chart-ease.js.map\n"],"names":["cloneSVGElement","element","newElement","document","createElementNS","tagName","toLowerCase","from","to","Array","attributes","forEach","attr","value","setAttribute","name","style","cssText","copyStyles","children","child","appendChild","createSVGElements","flip","svg","shape","height","getBoundingClientRect","parseFloat","getAttribute","drawPoints","pointTypes","data","originalData","ondraw","g","row","index","pointType","originalRow","x","y","nodeName","width","Number","adjustWidth","adjustHeight","setDefaultPosition","setGroupsMinMax","groups","group","undefined","min","keys","MAX_VALUE","i","length","j","keyMin","getKeyMin","getKeysMin","cols","max","MIN_VALUE","keyMax","getKeyMax","getKeysMax","key","Math","DataSet","HTMLElement","constructor","super","connectedCallback","disconnectedCallback","normalizeGroups","this","getNormalizeGroups","arr","normalizedArr","map","item","arrKeys","Object","includes","round","num","stop","start","normalizeNumber","normalize","parentElement","querySelector","parent","pathType","path","point","join","removeAttribute","loadPathData","drawPath","removeChild","margin","h","split","left","right","hAxis","v","bottom","top","vAxis","filter","MARGIN","ChartAxis","init","addEventListener","e","render","setTickPositions","axis","type","axisLine","isVertical","position","drawAxisLine","ticks","tick","tl","drawTicks","label","text","innerHTML","direction","drawLabels","grid","gridStart","gridStop","drawGridLines","pE","parseInt","tickSize","push","ChartEase","setStyles","createSVG","dispatchEvent","Event","lineHeight","customElements","get","define","adjust","low","high","open","close","abs","axes"],"mappings":"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"}