{"version":3,"file":"chart-ease.min.js","sources":["../docs/website/static/js/chart-ease.js"],"sourcesContent":["(function () {\n  'use strict';\n\n  function normalize(arr, normalizeGroups) {\r\n    const normalizedArr = arr.map((item) => {\r\n      return { ...item };\r\n    });\r\n\r\n    const arrKeys = Object.keys(arr[0]);\r\n    normalizedArr.forEach((item) => {\r\n      normalizeGroups.forEach((group) => {\r\n        arrKeys.forEach((key) => {\r\n          if (group.cols.includes(key)) {\r\n            item[key] = Math.round(normalizeNumber(item[key], group));\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    return normalizedArr;\r\n  }\r\n\r\n  function normalizeNumber(num, group) {\r\n    return ((num - group.min) / (group.max - group.min)) * (group.stop - group.start) + group.start;\r\n  }\n\n  function copyAttrs(from, to) {\r\n    Array.from(from.attributes).forEach((attr) => {\r\n      if (attr.value) to.setAttribute(attr.name, attr.value);\r\n    });\r\n  }\n\n  function copyStyles(from, to) {\r\n    if (from.style.cssText) to.style.cssText = from.style.cssText;\r\n  }\n\n  function cloneSVGElement(element) {\r\n    const newElement = document.createElementNS(\r\n      \"http://www.w3.org/2000/svg\",\r\n      element.tagName.toLowerCase()\r\n    );\r\n    copyAttrs(element, newElement);\r\n    copyStyles(element, newElement);\r\n    const children = Array.from(element.children);\r\n    children.forEach((child) => {\r\n      newElement.appendChild(cloneSVGElement(child));\r\n    });\r\n    return newElement;\r\n  }\n\n  function createSVGElements(tagName) {\r\n    return document.createElementNS(\"http://www.w3.org/2000/svg\", tagName);\r\n  }\n\n  function flip(svg, shape) {\r\n    const { height } = svg.getBoundingClientRect();\r\n    if (shape.tagName.toLowerCase() == \"text\") {\r\n      shape.setAttribute(\"transform\", `scale(1,-1) translate(0, -${height})`);\r\n      shape.setAttribute(\"y\", height - parseFloat(shape.getAttribute(\"y\")));\r\n    }\r\n  }\n\n  function drawDataSet(dataset) {\r\n    Array.prototype.slice.call(dataset.children).forEach((element) => {\r\n      if (element.hasAttribute(\"path-type\")) drawPath(element, dataset);\r\n      else drawPoints(dataset, element);\r\n    });\r\n  }\r\n\r\n  function drawPath(pathType, dataset) {\r\n    if (!pathType) return;\r\n    const path = cloneSVGElement(pathType);\r\n    if (path.nodeName === \"path\") loadPathData(path, dataset);\r\n    else if (path.nodeName === \"polyline\") loadPolylineData(path, dataset);\r\n    dataset.g.appendChild(path);\r\n  }\r\n\r\n  function loadPathData(path, dataset) {\r\n    path.setAttribute(\r\n      \"d\",\r\n      dataset.normalizedData\r\n        .map((point, index) => (index === 0 ? `M ${point.x} ${point.y}` : ` L ${point.x} ${point.y}`))\r\n        .join(\" \")\r\n    );\r\n    path.removeAttribute(\"is\");\r\n  }\r\n\r\n  function loadPolylineData(node, dataset) {\r\n    node.setAttribute(\"points\", dataset.normalizedData.map((point) => `${point.x},${point.y}`).join(\" \"));\r\n  }\r\n\r\n  function drawPoints(dataset, element) {\r\n    const pointGroup = createSVGElements(\"g\");\r\n    dataset.normalizedData.forEach((row, index) => {\r\n      const ondraw = dataset[\"ondraw\"];\r\n      const shape = cloneSVGElement(element);\r\n      if (!ondraw) setDefaultPosition(shape, row.x, row.y);\r\n      else\r\n        ondraw({\r\n          shape,\r\n          row,\r\n          originalRow: dataset.originalData[index],\r\n          index,\r\n        });\r\n      pointGroup.appendChild(shape);\r\n      flip(pointGroup, shape);\r\n    });\r\n    dataset.g.appendChild(pointGroup);\r\n  }\r\n\r\n  function setDefaultPosition(shape, x, y) {\r\n    switch (shape.nodeName) {\r\n      case \"rect\":\r\n        if (x > 0) {\r\n          const width = Number(shape.getAttribute(\"width\"));\r\n          const adjustWidth = width > 0 ? x - width / 2 : x;\r\n          shape.setAttribute(\"x\", adjustWidth);\r\n        }\r\n        if (y > 0) {\r\n          const height = Number(shape.getAttribute(\"height\"));\r\n          const adjustHeight = height > 0 ? y - height / 2 : x;\r\n          shape.setAttribute(\"y\", adjustHeight);\r\n        }\r\n        break;\r\n      case \"circle\":\r\n      case \"ellipse\":\r\n        if (x > 0) shape.setAttribute(\"cx\", x);\r\n        if (y > 0) shape.setAttribute(\"cy\", y);\r\n      default:\r\n        if (x > 0) shape.setAttribute(\"x\", x);\r\n        if (y > 0) shape.setAttribute(\"y\", y);\r\n        break;\r\n    }\r\n  }\n\n  function setGroupsMinMax(data, groups) {\r\n    groups.forEach((group) => {\r\n      if (group.min == undefined) group.min = getKeysMin(data, group.cols);\r\n      if (group.max == undefined) group.max = getKeysMax(data, group.cols);\r\n    });\r\n  }\r\n\r\n  function getKeysMin(data, keys) {\r\n    let min = Number.MAX_VALUE;\r\n    for (let i = 1; i < data.length; i++) {\r\n      for (let j = 0; j < keys.length; j++) {\r\n        const keyMin = getKeyMin(data, keys[j]);\r\n        if (min > keyMin) min = keyMin;\r\n      }\r\n    }\r\n    return min;\r\n  }\r\n\r\n  function getKeysMax(data, keys) {\r\n    let max = Number.MIN_VALUE;\r\n    for (let i = 1; i < data.length; i++) {\r\n      for (let j = 0; j < keys.length; j++) {\r\n        const keyMax = getKeyMax(data, keys[j]);\r\n        if (keyMax > max) max = keyMax;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  function getKeyMin(data, key) {\r\n    let min = data[0][key];\r\n    for (let i = 1; i < data.length; i++) {\r\n      min = Math.min(min, data[i][key]);\r\n    }\r\n    return min;\r\n  }\r\n\r\n  function getKeyMax(data, key) {\r\n    let max = data[0][key];\r\n    for (let i = 1; i < data.length; i++) {\r\n      max = Math.max(max, data[i][key]);\r\n    }\r\n    return max;\r\n  }\n\n  class DataSet extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n\r\n    set data(originalData) {\r\n      this.originalData = this.arrayData(originalData);\r\n      this.hAxis = this.getDirection(\"h\");\r\n      this.vAxis = this.getDirection(\"v\");\r\n      const directionGroups = [this.hAxis, this.vAxis];\r\n      setGroupsMinMax(originalData, directionGroups);\r\n      this.normalizedData = normalize(originalData, directionGroups);\r\n      this.render();\r\n    }\r\n\r\n    arrayData(arr) {\r\n      if (typeof item === \"object\") return;\r\n      return arr.map(item, (i) => {\r\n        return { x: i, y: item };\r\n      });\r\n    }\r\n\r\n    render() {\r\n      this.init();\r\n      this.g.innerHTML = \"\";\r\n      drawDataSet(this);\r\n    }\r\n\r\n    init() {\r\n      const dataSet = this.parentElement.querySelector('g[name=\"dataset\"]');\r\n      if (!this.g) {\r\n        this.g = createSVGElements(\"g\");\r\n        dataSet.append(this.g);\r\n      }\r\n    }\r\n\r\n    getDirection(dir) {\r\n      let group = {\r\n        cols: this.getCols(dir),\r\n        start: this.getStart(dir),\r\n        stop: this.getStop(dir),\r\n      };\r\n      let axis = this.getAxis(dir);\r\n      if (axis) {\r\n        group = {\r\n          ...group,\r\n          min: axis.min,\r\n          max: axis.max,\r\n        };\r\n      }\r\n      return group;\r\n    }\r\n\r\n    getAxis(dir) {\r\n      if (dir === \"h\")\r\n        return this.parentElement.querySelector(\"bottom-axis\") ?? this.parentElement.querySelector(\"top-axis\");\r\n      return this.parentElement.querySelector(\"left-axis\") ?? this.parentElement.querySelector(\"right-axis\");\r\n    }\r\n    getStart(dir) {\r\n      if (dir === \"h\") return this.parentElement.margin.left;\r\n      return this.parentElement.margin.bottom;\r\n    }\r\n    getStop(dir) {\r\n      if (dir === \"h\") return this.parentElement.width - this.parentElement.margin.right;\r\n      return this.parentElement.height - this.parentElement.margin.top;\r\n    }\r\n    getCols(dir) {\r\n      if (dir === \"h\") return this.getAttribute(\"hAxis\") ? this.getAttribute(\"hAxis\").split(\",\") : [\"x\"];\r\n      return this.getAttribute(\"vAxis\") ? this.getAttribute(\"vAxis\").split(\",\") : [\"y\"];\r\n    }\r\n  }\n\n  class CandleStick extends DataSet {\r\n    constructor() {\r\n      super();\r\n      this.adjust();\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n\r\n    adjust() {\r\n      this.appendChild(createSVGElements(\"line\"));\r\n      this.appendChild(createSVGElements(\"rect\"));\r\n      this.ondraw = ({ shape, row }) => {\r\n        switch (shape.tagName) {\r\n          case \"line\":\r\n            shape.setAttribute(\"x1\", row.x + 5);\r\n            shape.setAttribute(\"x2\", row.x + 5);\r\n            shape.setAttribute(\"y1\", row.low);\r\n            shape.setAttribute(\"y2\", row.high);\r\n            shape.setAttribute(\r\n              \"stroke\",\r\n              row.open > row.close ? \"#28A69A\" : \"#EE5355\"\r\n            );\r\n            break;\r\n          case \"rect\":\r\n            shape.setAttribute(\"width\", 10);\r\n            shape.setAttribute(\"height\", Math.abs(row.open - row.close));\r\n            shape.setAttribute(\"x\", row.x);\r\n            shape.setAttribute(\"y\", row.open);\r\n            shape.setAttribute(\r\n              \"fill\",\r\n              row.open > row.close ? \"#28A69A\" : \"#EE5355\"\r\n            );\r\n            break;\r\n        }\r\n      };\r\n      this.axes = [\r\n        { cols: [\"x\"], length: 200, margin: 10 },\r\n        {\r\n          cols: [\"low\", \"open\", \"close\", \"high\"],\r\n          length: 200,\r\n          margin: 10,\r\n        },\r\n      ];\r\n    }\r\n  }\n\n  const WIDTH = 200;\r\n  const HEIGHT = 200;\r\n  const MARGIN = 10;\n\n  function createSVG(chart) {\r\n    chart.svg = appendSVG(chart.width, chart.height);\r\n    chart.appendChild(chart.svg);\r\n    appendG(chart.svg, \"grid\");\r\n    appendG(chart.svg, \"dataset\");\r\n    appendG(chart.svg, \"axes\");\r\n\r\n    chart.dispatchEvent(new Event(\"created\"));\r\n  }\r\n\r\n  function appendSVG(width, height) {\r\n    const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n    svg.setAttribute(\"width\", width);\r\n    svg.setAttribute(\"height\", height);\r\n    svg.setAttribute(\"transform\", \"scale(1,-1)\");\r\n    return svg;\r\n  }\r\n\r\n  function appendG(svg, name) {\r\n    const g = createSVGElements(\"g\");\r\n    g.setAttribute(\"name\", name);\r\n    svg.appendChild(g);\r\n  }\n\n  function drawAxisLine(axis, group) {\r\n    const g = createSVGElements(\"g\");\r\n    if (!axis.line) return;\r\n    const axisLine = cloneSVGElement(axis.line);\r\n    if (axis.isVertical) {\r\n      axisLine.setAttribute(\"x1\", axis.position);\r\n      axisLine.setAttribute(\"x2\", axis.position);\r\n      axisLine.setAttribute(\"y1\", axis.start);\r\n      axisLine.setAttribute(\"y2\", axis.stop);\r\n    } else {\r\n      axisLine.setAttribute(\"x1\", axis.start);\r\n      axisLine.setAttribute(\"x2\", axis.stop);\r\n      axisLine.setAttribute(\"y1\", axis.position);\r\n      axisLine.setAttribute(\"y2\", axis.position);\r\n    }\r\n\r\n    g.appendChild(axisLine);\r\n    group.appendChild(g);\r\n  }\n\n  function drawTicks(axis, group) {\r\n    const g = createSVGElements(\"g\");\r\n    axis.ticks.forEach((tick) => {\r\n      if (!axis.tick) return;\r\n      const tl = cloneSVGElement(axis.tick);\r\n      const height = Number(tl.getAttribute(\"height\") || 0);\r\n      const width = Number(tl.getAttribute(\"width\") || 0);\r\n      const offset = axis.line?.getAttribute(\"stroke-width\") || 0;\r\n      if (axis.isVertical) {\r\n        tl.setAttribute(\"x\", axis.position - offset);\r\n        tl.setAttribute(\"y\", tick.position - height / 2);\r\n      } else {\r\n        tl.setAttribute(\"x\", tick.position - width / 2);\r\n        tl.setAttribute(\"y\", axis.position - offset);\r\n      }\r\n      g.appendChild(tl);\r\n    });\r\n\r\n    group.appendChild(g);\r\n  }\n\n  function drawGridLines(axis, group) {\r\n    const g = createSVGElements(\"g\");\r\n    if (axis.grid) {\r\n      axis.ticks.forEach((tick) => {\r\n        if (!axis.grid) return;\r\n        const tl = cloneSVGElement(axis.grid);\r\n        if (axis.isVertical) {\r\n          tl.setAttribute(\"x1\", axis.gridStart);\r\n          tl.setAttribute(\"x2\", axis.gridStop);\r\n          tl.setAttribute(\"y1\", tick.position);\r\n          tl.setAttribute(\"y2\", tick.position);\r\n        } else {\r\n          tl.setAttribute(\"x1\", tick.position);\r\n          tl.setAttribute(\"x2\", tick.position);\r\n          tl.setAttribute(\"y1\", axis.gridStart);\r\n          tl.setAttribute(\"y2\", axis.gridStop);\r\n        }\r\n        g.appendChild(tl);\r\n      });\r\n    }\r\n    group.appendChild(g);\r\n  }\n\n  function drawLabels(axis, group) {\r\n    const g = createSVGElements(\"g\");\r\n    group.appendChild(g);\r\n    axis.ticks.forEach((tick) => {\r\n      if (!axis.label) return;\r\n      const text = cloneSVGElement(axis.label);\r\n      text.innerHTML = tick.value;\r\n      g.appendChild(text);\r\n      let { width, height } = text.getBoundingClientRect();\r\n      const tickWidth = axis.tick?.getAttribute(\"width\") || 0;\r\n      const tickHeight = axis.tick?.getAttribute(\"height\") || 0;\r\n      switch (axis.direction) {\r\n        case \"left\":\r\n          width += width / tick.value.toString().length;\r\n          text.setAttribute(\"x\", axis.position - width - tickWidth / 2);\r\n          text.setAttribute(\"y\", tick.position - height / 3);\r\n          break;\r\n        case \"right\":\r\n          text.setAttribute(\"x\", axis.position + tickWidth / 2);\r\n          text.setAttribute(\"y\", tick.position - height / 3);\r\n          break;\r\n        case \"bottom\":\r\n          text.setAttribute(\"x\", tick.position - width / 2);\r\n          text.setAttribute(\"y\", axis.position - height - tickHeight / 2);\r\n          break;\r\n        case \"top\":\r\n          text.setAttribute(\"x\", tick.position - width / 2);\r\n          text.setAttribute(\"y\", axis.position + tickHeight);\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n      flip(group, text);\r\n    });\r\n  }\n\n  class ChartAxis extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n      this.parentElement.addEventListener(\"created\", (e) => {\r\n        this.render();\r\n      });\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n\r\n    render() {\r\n      const group = this.parentElement.querySelector('g[name=\"axes\"]');\r\n      const grid = this.parentElement.querySelector('g[name=\"grid\"]');\r\n      this.setTickPositions();\r\n      drawAxisLine(this, group);\r\n      if (this.ticks.length > 0) {\r\n        drawTicks(this, group);\r\n        drawLabels(this, group);\r\n        drawGridLines(this, grid);\r\n      }\r\n    }\r\n\r\n    setTickPositions() {\r\n      this.ticks = [];\r\n      const ticks = parseInt(this.getAttribute(\"ticks\") ?? 0);\r\n      if (ticks <= 0) return;\r\n      const tickSize = Math.round((this.max - this.min) / (ticks - 1));\r\n      let value = this.min;\r\n      let position = this.start;\r\n      while (true) {\r\n        position = ((value - this.min) / (this.max - this.min)) * (this.stop - this.start) + this.start;\r\n        if (position > this.stop || isNaN(position)) break;\r\n        this.ticks.push({ value, position });\r\n        value += tickSize;\r\n      }\r\n    }\r\n\r\n    get min() {\r\n      return parseInt(this.getAttribute(\"min\") ?? 0);\r\n    }\r\n    get max() {\r\n      return parseInt(this.getAttribute(\"max\") ?? 0);\r\n    }\r\n    get label() {\r\n      return this.querySelector(\"text\");\r\n    }\r\n    get grid() {\r\n      return this.querySelector(`line[grid-line]`);\r\n    }\r\n    get line() {\r\n      return this.querySelector(\"line[axis-line]\");\r\n    }\r\n    get tick() {\r\n      return this.querySelector(\"rect[axis-tick]\");\r\n    }\r\n    get margin() {\r\n      return this.parentElement.margin;\r\n    }\r\n    get height() {\r\n      return this.parentElement.height;\r\n    }\r\n    get width() {\r\n      return this.parentElement.width;\r\n    }\r\n  }\n\n  class LeftAxis extends ChartAxis {\r\n    constructor() {\r\n      super();\r\n    }\r\n\r\n    get start() {\r\n      return this.margin.bottom;\r\n    }\r\n\r\n    get stop() {\r\n      return this.height - this.margin.top;\r\n    }\r\n\r\n    get position() {\r\n      return this.margin.left;\r\n    }\r\n\r\n    get gridStart() {\r\n      return this.margin.left;\r\n    }\r\n\r\n    get gridStop() {\r\n      return this.width - this.margin.right;\r\n    }\r\n\r\n    get isVertical() {\r\n      return true;\r\n    }\r\n\r\n    get direction() {\r\n      return \"left\";\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n  }\n\n  class RightAxis extends ChartAxis {\r\n    constructor() {\r\n      super();\r\n    }\r\n\r\n    get start() {\r\n      return this.margin.bottom;\r\n    }\r\n\r\n    get stop() {\r\n      return this.height - this.margin.top;\r\n    }\r\n\r\n    get position() {\r\n      return this.width - this.margin.right;\r\n    }\r\n\r\n    get gridStart() {\r\n      return this.margin.left;\r\n    }\r\n\r\n    get gridStop() {\r\n      return this.width - this.margin.right;\r\n    }\r\n\r\n    get isVertical() {\r\n      return true;\r\n    }\r\n\r\n    get direction() {\r\n      return \"right\";\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n  }\n\n  class TopAxis extends ChartAxis {\r\n    constructor() {\r\n      super();\r\n    }\r\n\r\n    get start() {\r\n      return this.margin.left;\r\n    }\r\n\r\n    get stop() {\r\n      return this.width - this.margin.right;\r\n    }\r\n\r\n    get position() {\r\n      return this.height - this.margin.top;\r\n    }\r\n\r\n    get gridStart() {\r\n      return this.margin.bottom;\r\n    }\r\n\r\n    get gridStop() {\r\n      return this.height - this.margin.top;\r\n    }\r\n\r\n    get isVertical() {\r\n      return false;\r\n    }\r\n\r\n    get direction() {\r\n      return \"top\";\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n  }\n\n  class BottomAxis extends ChartAxis {\r\n    constructor() {\r\n      super();\r\n    }\r\n\r\n    get start() {\r\n      return this.margin.left;\r\n    }\r\n\r\n    get stop() {\r\n      return this.width - this.margin.right;\r\n    }\r\n\r\n    get position() {\r\n      return this.margin.bottom;\r\n    }\r\n\r\n    get gridStart() {\r\n      return this.margin.bottom;\r\n    }\r\n\r\n    get gridStop() {\r\n      return this.height - this.margin.top;\r\n    }\r\n\r\n    get isVertical() {\r\n      return false;\r\n    }\r\n\r\n    get direction() {\r\n      return \"bottom\";\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n  }\n\n  class ChartEase extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n      this.setStyles();\r\n      createSVG(this);\r\n    }\r\n\r\n    disconnectedCallback() {}\r\n\r\n    get height() {\r\n      return parseFloat(this.getAttribute(\"height\") ?? HEIGHT);\r\n    }\r\n    get width() {\r\n      return parseFloat(this.getAttribute(\"width\") ?? WIDTH);\r\n    }\r\n    get margin() {\r\n      const getAxisSize = (name) => parseFloat(this.querySelector(name)?.getAttribute(\"size\")) || 0;\r\n      const getMargin = (name) => parseFloat(this.getAttribute(name) ?? this.getAttribute(\"margin\") ?? MARGIN);\r\n      const margin = {\r\n        top: getAxisSize(\"top-axis\") + getMargin(\"margin-top\"),\r\n        bottom: getAxisSize(\"bottom-axis\") + getMargin(\"margin-bottom\"),\r\n        left: getAxisSize(\"left-axis\") + getMargin(\"margin-left\"),\r\n        right: getAxisSize(\"right-axis\") + getMargin(\"margin-right\"),\r\n      };\r\n      return margin;\r\n    }\r\n\r\n    set ondraw(ondraw) {\r\n      this.querySelector(\"data-set\").ondraw = ondraw;\r\n    }\r\n    set data(data) {\r\n      this.querySelector(\"data-set\").data = data;\r\n    }\r\n\r\n    setStyles() {\r\n      this.style.lineHeight = 0;\r\n    }\r\n  }\r\n\r\n  customElements.get(\"left-axis\") ?? customElements.define(\"left-axis\", LeftAxis);\r\n  customElements.get(\"right-axis\") ?? customElements.define(\"right-axis\", RightAxis);\r\n  customElements.get(\"top-axis\") ?? customElements.define(\"top-axis\", TopAxis);\r\n  customElements.get(\"bottom-axis\") ?? customElements.define(\"bottom-axis\", BottomAxis);\r\n\r\n  customElements.get(\"data-set\") ?? customElements.define(\"data-set\", DataSet);\r\n  customElements.get(\"chart-ease\") ?? customElements.define(\"chart-ease\", ChartEase);\r\n  customElements.get(\"candle-stick\") ?? customElements.define(\"candle-stick\", CandleStick);\n\n  return ChartEase;\n\n})();\n//# sourceMappingURL=chart-ease.js.map\n"],"names":["cloneSVGElement","element","newElement","document","createElementNS","tagName","toLowerCase","from","to","Array","attributes","forEach","attr","value","setAttribute","name","style","cssText","copyStyles","children","child","appendChild","createSVGElements","flip","svg","shape","height","getBoundingClientRect","parseFloat","getAttribute","drawDataSet","dataset","prototype","slice","call","hasAttribute","pathType","path","nodeName","normalizedData","map","point","index","x","y","join","removeAttribute","loadPathData","node","loadPolylineData","g","drawPath","pointGroup","row","ondraw","originalRow","originalData","width","Number","adjustWidth","adjustHeight","setDefaultPosition","drawPoints","setGroupsMinMax","data","groups","group","undefined","min","keys","MAX_VALUE","i","length","j","keyMin","getKeyMin","getKeysMin","cols","max","MIN_VALUE","keyMax","getKeyMax","getKeysMax","key","Math","DataSet","HTMLElement","constructor","super","connectedCallback","disconnectedCallback","this","arrayData","hAxis","getDirection","vAxis","directionGroups","arr","normalizeGroups","normalizedArr","item","arrKeys","Object","includes","round","num","stop","start","normalizeNumber","normalize","render","init","innerHTML","dataSet","parentElement","querySelector","append","dir","getCols","getStart","getStop","axis","getAxis","margin","left","bottom","right","top","split","createSVG","chart","appendSVG","appendG","dispatchEvent","Event","ChartAxis","addEventListener","e","grid","setTickPositions","line","axisLine","isVertical","position","drawAxisLine","ticks","tick","tl","offset","drawTicks","label","text","tickWidth","tickHeight","direction","toString","drawLabels","gridStart","gridStop","drawGridLines","parseInt","tickSize","isNaN","push","ChartEase","setStyles","getAxisSize","getMargin","lineHeight","customElements","get","define","adjust","low","high","open","close","abs","axes"],"mappings":"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"}