{"version":3,"file":"chart-ease.min.js","sources":["../site/js/chart-ease.js"],"sourcesContent":["(function () {\n  'use strict';\n\n  function normalize(arr, normalizeKeys) {\r\n    const normalizedArr = arr.map((item) => {\r\n      return { ...item };\r\n    });\r\n    const nGroups = [];\r\n    normalizeKeys.forEach((nGroup) => {\r\n      nGroups.push({\r\n        ...nGroup,\r\n        min: getKeysMin(arr, nGroup.cols),\r\n        max: getKeysMax(arr, nGroup.cols),\r\n      });\r\n    });\r\n    const arrKeys = Object.keys(arr[0]);\r\n    normalizedArr.forEach((item) => {\r\n      nGroups.forEach((group) => {\r\n        arrKeys.forEach((key) => {\r\n          if (group.cols.includes(key)) {\r\n            item[key] =\r\n              ((item[key] - group.min) / (group.max - group.min)) * (group.upperBound - group.lowerBound) +\r\n              group.lowerBound;\r\n\r\n            item[key] = Math.round(item[key]);\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    nGroups\r\n      .filter((group) => group.flip)\r\n      .forEach((group) => {\r\n        flip(normalizedArr, group);\r\n      });\r\n\r\n    return normalizedArr;\r\n  }\r\n\r\n  function getKeysMin(arr, keys) {\r\n    let min = Number.MAX_VALUE;\r\n    for (let i = 1; i < arr.length; i++) {\r\n      for (let j = 0; j < keys.length; j++) {\r\n        const keyMin = getKeyMin(arr, keys[j]);\r\n        if (min > keyMin) min = keyMin;\r\n      }\r\n    }\r\n    return min;\r\n  }\r\n\r\n  function getKeysMax(arr, keys) {\r\n    let max = Number.MIN_VALUE;\r\n    for (let i = 1; i < arr.length; i++) {\r\n      for (let j = 0; j < keys.length; j++) {\r\n        const keyMax = getKeyMax(arr, keys[j]);\r\n        if (keyMax > max) max = keyMax;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  function getKeyMin(arr, key) {\r\n    let min = arr[0][key];\r\n    for (let i = 1; i < arr.length; i++) {\r\n      min = Math.min(min, arr[i][key]);\r\n    }\r\n    return min;\r\n  }\r\n\r\n  function getKeyMax(arr, key) {\r\n    let max = arr[0][key];\r\n    for (let i = 1; i < arr.length; i++) {\r\n      max = Math.max(max, arr[i][key]);\r\n    }\r\n    return max;\r\n  }\r\n\r\n  function flip(arr, nGroup) {\r\n    const keys = nGroup.cols;\r\n    let max = getKeysMax(arr, keys);\r\n    arr.forEach((item) => {\r\n      keys.forEach((key) => {\r\n        item[key] = max - item[key] + nGroup.lowerBound;\r\n      });\r\n    });\r\n  }\n\n  function copyAttrs(from, to) {\r\n    Array.from(from.attributes).forEach((attr) => {\r\n      if (attr.value) to.setAttribute(attr.name, attr.value);\r\n    });\r\n  }\n\n  function copyStyles(from, to) {\r\n    if (from.style.cssText) to.style.cssText = from.style.cssText;\r\n  }\n\n  function cloneSVGElement(element) {\r\n    const newElement = document.createElementNS(\r\n      \"http://www.w3.org/2000/svg\",\r\n      element.tagName.toLowerCase()\r\n    );\r\n    copyAttrs(element, newElement);\r\n    copyStyles(element, newElement);\r\n    const children = Array.from(element.children);\r\n    children.forEach((child) => {\r\n      newElement.appendChild(cloneSVGElement(child));\r\n    });\r\n    return newElement;\r\n  }\n\n  function drawPoints(svg, pointTypes, data, originalData, ondraw) {\r\n    data.forEach((row, index) => {\r\n      pointTypes.forEach((pointType) => {\r\n        const shape = cloneSVGElement(pointType);\r\n        if (!ondraw) setDefaultPosition(shape, row.x, row.y);\r\n        else\r\n          ondraw({\r\n            shape,\r\n            row,\r\n            originalRow: originalData[index],\r\n            index,\r\n          });\r\n        svg.appendChild(shape);\r\n        flipTexts(svg, shape);\r\n      });\r\n    });\r\n  }\r\n\r\n  function flipTexts(svg, shape) {\r\n    const { height } = svg.getBoundingClientRect();\r\n    if (shape.tagName.toLowerCase() == \"text\") {\r\n      shape.setAttribute(\"transform\", `scale(1,-1) translate(0, -${height})`);\r\n      shape.setAttribute(\"y\", height - parseFloat(shape.getAttribute(\"y\")));\r\n    }\r\n  }\r\n\r\n  function setDefaultPosition(shape, x, y) {\r\n    switch (shape.nodeName) {\r\n      case \"rect\":\r\n        if (x > 0) {\r\n          const width = Number(shape.getAttribute(\"width\"));\r\n          const adjustWidth = width > 0 ? x - width / 2 : x;\r\n          shape.setAttribute(\"x\", adjustWidth);\r\n        }\r\n        if (y > 0) {\r\n          const height = Number(shape.getAttribute(\"height\"));\r\n          const adjustHeight = height > 0 ? y - height / 2 : x;\r\n          shape.setAttribute(\"y\", adjustHeight);\r\n        }\r\n        break;\r\n      case \"circle\":\r\n      case \"ellipse\":\r\n        if (x > 0) shape.setAttribute(\"cx\", x);\r\n        if (y > 0) shape.setAttribute(\"cy\", y);\r\n      default:\r\n        if (x > 0) shape.setAttribute(\"x\", x);\r\n        if (y > 0) shape.setAttribute(\"y\", y);\r\n        break;\r\n    }\r\n  }\n\n  function drawPath(parent, pathType, data) {\r\n    if (!pathType) return;\r\n    const path = cloneSVGElement(pathType);\r\n    loadPathData(path, data);\r\n    parent.appendChild(path);\r\n  }\r\n\r\n  function loadPathData(path, data) {\r\n    path.setAttribute(\r\n      \"d\",\r\n      data\r\n        .map((point, index) => (index === 0 ? `M ${point.x} ${point.y}` : ` L ${point.x} ${point.y}`))\r\n        .join(\" \")\r\n    );\r\n    path.removeAttribute(\"is\");\r\n  }\n\n  function drawAxes(svg, axesLines) {\r\n    const left = svg.parentElement.margin.left;\r\n    const right = svg.parentElement.width - svg.parentElement.margin.right;\r\n    const bottom = svg.parentElement.margin.bottom;\r\n    const top = svg.parentElement.height - svg.parentElement.margin.top;\r\n    if (axesLines.left) {\r\n      const axis = createAxis(svg, axesLines.left);\r\n      axis.setAttribute(\"x1\", left);\r\n      axis.setAttribute(\"x2\", left);\r\n      axis.setAttribute(\"y1\", bottom);\r\n      axis.setAttribute(\"y2\", top);\r\n    }\r\n    if (axesLines.top) {\r\n      const axis = createAxis(svg, axesLines.top);\r\n      axis.setAttribute(\"x1\", left);\r\n      axis.setAttribute(\"x2\", right);\r\n      axis.setAttribute(\"y1\", top);\r\n      axis.setAttribute(\"y2\", top);\r\n    }\r\n    if (axesLines.bottom) {\r\n      const axis = createAxis(svg, axesLines.bottom);\r\n      axis.setAttribute(\"x1\", left);\r\n      axis.setAttribute(\"x2\", right);\r\n      axis.setAttribute(\"y1\", bottom);\r\n      axis.setAttribute(\"y2\", bottom);\r\n    }\r\n    if (axesLines.right) {\r\n      const axis = createAxis(svg, axesLines.right);\r\n      axis.setAttribute(\"x1\", right);\r\n      axis.setAttribute(\"x2\", right);\r\n      axis.setAttribute(\"y1\", bottom);\r\n      axis.setAttribute(\"y2\", top);\r\n    }\r\n  }\r\n\r\n  function createAxis(svg, axisType) {\r\n    const axis = cloneSVGElement(axisType);\r\n    svg.appendChild(axis);\r\n    return axis;\r\n  }\n\n  class DataSet extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n\r\n    draw(data, originalData) {\r\n      const svg = this.parentElement.querySelector(\"svg\");\r\n      drawPath(svg, this.pathType, data);\r\n      drawPoints(svg, this.pointTypes, data, originalData, this[\"ondraw\"]);\r\n      drawAxes(svg, this.parentElement.axesLines);\r\n    }\r\n\r\n    set data(originalData) {\r\n      this.axesInit();\r\n      const data = normalize(originalData, this.axes);\r\n      this.draw(data, originalData);\r\n      this.parentElement.removeChild(this);\r\n    }\r\n\r\n    axesInit() {\r\n      this.axes = [\r\n        {\r\n          cols: this.getAttribute(\"hAxis\") ? this.getAttribute(\"hAxis\").split(\",\") : [\"x\"],\r\n          length: this.parentElement.width,\r\n        },\r\n        {\r\n          cols: this.getAttribute(\"vAxis\") ? this.getAttribute(\"vAxis\").split(\",\") : [\"y\"],\r\n          length: this.parentElement.height,\r\n        },\r\n      ];\r\n      this[\"axes\"] ? this[\"axes\"] : [];\r\n      const margin = this.parentElement.margin;\r\n      const padding = this.parentElement.padding;\r\n      // X axis bounds\r\n      this.axes[0].lowerBound = margin.left + padding.left + this.parentElement.axesLines.size.left;\r\n      this.axes[0].upperBound =\r\n        this.parentElement.width - margin.right - padding.right - this.parentElement.axesLines.size.right;\r\n      // Y axis bounds\r\n      this.axes[1].lowerBound = margin.bottom + padding.bottom + this.parentElement.axesLines.size.bottom;\r\n      this.axes[1].upperBound =\r\n        this.parentElement.height - margin.top - padding.top - this.parentElement.axesLines.size.top;\r\n    }\r\n\r\n    get pathType() {\r\n      return this.querySelector(`path[is=\"path-type\"]`);\r\n    }\r\n\r\n    get pointTypes() {\r\n      return Array.from(this.children).filter((item) => !item.getAttribute(\"is\"));\r\n    }\r\n  }\n\n  function createSVGElements(tagName) {\r\n    return document.createElementNS(\"http://www.w3.org/2000/svg\", tagName);\r\n  }\n\n  class CandleStick extends DataSet {\r\n    constructor() {\r\n      super();\r\n      this.adjust();\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n\r\n    adjust() {\r\n      this.appendChild(createSVGElements(\"line\"));\r\n      this.appendChild(createSVGElements(\"rect\"));\r\n      this.ondraw = ({ shape, row }) => {\r\n        switch (shape.tagName) {\r\n          case \"line\":\r\n            shape.setAttribute(\"x1\", row.x + 5);\r\n            shape.setAttribute(\"x2\", row.x + 5);\r\n            shape.setAttribute(\"y1\", row.low);\r\n            shape.setAttribute(\"y2\", row.high);\r\n            shape.setAttribute(\r\n              \"stroke\",\r\n              row.open > row.close ? \"#28A69A\" : \"#EE5355\"\r\n            );\r\n            break;\r\n          case \"rect\":\r\n            shape.setAttribute(\"width\", 10);\r\n            shape.setAttribute(\"height\", Math.abs(row.open - row.close));\r\n            shape.setAttribute(\"x\", row.x);\r\n            shape.setAttribute(\"y\", row.open);\r\n            shape.setAttribute(\r\n              \"fill\",\r\n              row.open > row.close ? \"#28A69A\" : \"#EE5355\"\r\n            );\r\n            break;\r\n        }\r\n      };\r\n      this.axes = [\r\n        { cols: [\"x\"], length: 200, margin: 10 },\r\n        {\r\n          cols: [\"low\", \"open\", \"close\", \"high\"],\r\n          length: 200,\r\n          margin: 10,\r\n        },\r\n      ];\r\n    }\r\n  }\n\n  const WIDTH = 200;\r\n  const HEIGHT = 200;\r\n  const MARGIN = 0;\r\n  const PADDING = 0;\n\n  function createSVG(width, height) {\r\n    const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n    svg.setAttribute(\"width\", width);\r\n    svg.setAttribute(\"height\", height);\r\n    svg.setAttribute(\"transform\", \"scale(1,-1)\");\r\n    return svg;\r\n  }\n\n  class ChartEase extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n      this.setStyles();\r\n    }\r\n\r\n    connectedCallback() {\r\n      this.svg = createSVG(this.width, this.height);\r\n      this.appendChild(this.svg);\r\n    }\r\n    disconnectedCallback() {}\r\n\r\n    set axes(axes) {\r\n      this.firstElementChild.axes = axes;\r\n    }\r\n    set ondraw(ondraw) {\r\n      this.firstElementChild.ondraw = ondraw;\r\n    }\r\n    set data(data) {\r\n      this.firstElementChild.data = data;\r\n    }\r\n\r\n    get width() {\r\n      return parseFloat(this.getAttribute(\"width\") ?? WIDTH);\r\n    }\r\n    get height() {\r\n      return parseFloat(this.getAttribute(\"height\") ?? HEIGHT);\r\n    }\r\n    get margin() {\r\n      return {\r\n        top: parseFloat(this.getAttribute(\"margin-top\") ?? this.getAttribute(\"margin\") ?? MARGIN),\r\n        bottom: parseFloat(this.getAttribute(\"margin-bottom\") ?? this.getAttribute(\"margin\") ?? MARGIN),\r\n        left: parseFloat(this.getAttribute(\"margin-left\") ?? this.getAttribute(\"margin\") ?? MARGIN),\r\n        right: parseFloat(this.getAttribute(\"margin-right\") ?? this.getAttribute(\"margin\") ?? MARGIN),\r\n      };\r\n    }\r\n\r\n    get padding() {\r\n      return {\r\n        top: parseFloat(this.getAttribute(\"padding-top\") ?? this.getAttribute(\"padding\") ?? PADDING),\r\n        bottom: parseFloat(this.getAttribute(\"padding-bottom\") ?? this.getAttribute(\"padding\") ?? PADDING),\r\n        left: parseFloat(this.getAttribute(\"padding-left\") ?? this.getAttribute(\"padding\") ?? PADDING),\r\n        right: parseFloat(this.getAttribute(\"padding-right\") ?? this.getAttribute(\"padding\") ?? PADDING),\r\n      };\r\n    }\r\n\r\n    get axesLines() {\r\n      const left = Array.from(this.children).find((item) => item.getAttribute(\"is\") == \"left-axis\");\r\n      const right = Array.from(this.children).find((item) => item.getAttribute(\"is\") == \"right-axis\");\r\n      const top = Array.from(this.children).find((item) => item.getAttribute(\"is\") == \"top-axis\");\r\n      const bottom = Array.from(this.children).find((item) => item.getAttribute(\"is\") == \"bottom-axis\");\r\n      return {\r\n        left,\r\n        right,\r\n        top,\r\n        bottom,\r\n        size: {\r\n          left: left.getAttribute(\"width\"),\r\n          right: right.getAttribute(\"width\"),\r\n          top: top.getAttribute(\"width\"),\r\n          bottom: bottom.getAttribute(\"width\"),\r\n        },\r\n      };\r\n    }\r\n\r\n    setStyles() {\r\n      this.style.lineHeight = 0;\r\n    }\r\n  }\r\n\r\n  customElements.get(\"data-set\") ?? customElements.define(\"data-set\", DataSet);\r\n  customElements.get(\"chart-ease\") ?? customElements.define(\"chart-ease\", ChartEase);\r\n  customElements.get(\"candle-stick\") ?? customElements.define(\"candle-stick\", CandleStick);\n\n  return ChartEase;\n\n})();\n//# sourceMappingURL=chart-ease.js.map\n"],"names":["normalize","arr","normalizeKeys","normalizedArr","map","item","nGroups","forEach","nGroup","push","min","getKeysMin","cols","max","getKeysMax","arrKeys","Object","keys","group","key","includes","upperBound","lowerBound","Math","round","filter","flip","Number","MAX_VALUE","i","length","j","keyMin","getKeyMin","MIN_VALUE","keyMax","getKeyMax","cloneSVGElement","element","newElement","document","createElementNS","tagName","toLowerCase","from","to","Array","attributes","attr","value","setAttribute","name","style","cssText","copyStyles","children","child","appendChild","drawPoints","svg","pointTypes","data","originalData","ondraw","row","index","pointType","shape","originalRow","x","y","nodeName","width","getAttribute","adjustWidth","height","adjustHeight","setDefaultPosition","getBoundingClientRect","parseFloat","flipTexts","createAxis","axisType","axis","DataSet","HTMLElement","constructor","super","connectedCallback","disconnectedCallback","draw","this","parentElement","querySelector","parent","pathType","path","point","join","removeAttribute","loadPathData","drawPath","axesLines","left","margin","right","bottom","top","drawAxes","axesInit","axes","removeChild","split","padding","size","createSVGElements","ChartEase","setStyles","createSVG","firstElementChild","find","lineHeight","customElements","get","define","adjust","low","high","open","close","abs"],"mappings":"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"}