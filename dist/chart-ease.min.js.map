{"version":3,"file":"chart-ease.min.js","sources":["../site/js/chart-ease.js"],"sourcesContent":["(function () {\n  'use strict';\n\n  function normalize(arr, normalizeGroups) {\r\n    const normalizedArr = arr.map((item) => {\r\n      return { ...item };\r\n    });\r\n\r\n    const arrKeys = Object.keys(arr[0]);\r\n    normalizedArr.forEach((item) => {\r\n      normalizeGroups.forEach((group) => {\r\n        arrKeys.forEach((key) => {\r\n          if (group.cols.includes(key)) {\r\n            item[key] = Math.round(normalizeNumber(item[key], group));\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    return normalizedArr;\r\n  }\r\n\r\n  function normalizeNumber(num, group) {\r\n    return ((num - group.min) / (group.max - group.min)) * (group.stop - group.start) + group.start;\r\n  }\n\n  function copyAttrs(from, to) {\r\n    Array.from(from.attributes).forEach((attr) => {\r\n      if (attr.value) to.setAttribute(attr.name, attr.value);\r\n    });\r\n  }\n\n  function copyStyles(from, to) {\r\n    if (from.style.cssText) to.style.cssText = from.style.cssText;\r\n  }\n\n  function cloneSVGElement(element) {\r\n    const newElement = document.createElementNS(\r\n      \"http://www.w3.org/2000/svg\",\r\n      element.tagName.toLowerCase()\r\n    );\r\n    copyAttrs(element, newElement);\r\n    copyStyles(element, newElement);\r\n    const children = Array.from(element.children);\r\n    children.forEach((child) => {\r\n      newElement.appendChild(cloneSVGElement(child));\r\n    });\r\n    return newElement;\r\n  }\n\n  function createSVGElements(tagName) {\r\n    return document.createElementNS(\"http://www.w3.org/2000/svg\", tagName);\r\n  }\n\n  function flip(svg, shape) {\r\n    const { height } = svg.getBoundingClientRect();\r\n    if (shape.tagName.toLowerCase() == \"text\") {\r\n      shape.setAttribute(\"transform\", `scale(1,-1) translate(0, -${height})`);\r\n      shape.setAttribute(\"y\", height - parseFloat(shape.getAttribute(\"y\")));\r\n    }\r\n  }\n\n  function drawChart(svg, dataset, data, originalData) {\r\n    Array.prototype.slice.call(dataset.children).forEach((child) => {\r\n      if (child.hasAttribute(\"path-type\")) drawPath(svg, child, data);\r\n      else drawPoints(svg, dataset, data, child, originalData);\r\n    });\r\n  }\r\n\r\n  function drawPath(svg, pathType, data) {\r\n    if (!pathType) return;\r\n    const path = cloneSVGElement(pathType);\r\n    loadPathData(path, data);\r\n    svg.appendChild(path);\r\n  }\r\n\r\n  function loadPathData(path, data) {\r\n    path.setAttribute(\r\n      \"d\",\r\n      data\r\n        .map((point, index) => (index === 0 ? `M ${point.x} ${point.y}` : ` L ${point.x} ${point.y}`))\r\n        .join(\" \")\r\n    );\r\n    path.removeAttribute(\"is\");\r\n  }\r\n\r\n  function drawPoints(svg, dataset, data, child, originalData) {\r\n    const g = createSVGElements(\"g\");\r\n    data.forEach((row, index) => {\r\n      const ondraw = dataset[\"ondraw\"];\r\n      const shape = cloneSVGElement(child);\r\n      if (!ondraw) setDefaultPosition(shape, row.x, row.y);\r\n      else\r\n        ondraw({\r\n          shape,\r\n          row,\r\n          originalRow: originalData[index],\r\n          index,\r\n        });\r\n      g.appendChild(shape);\r\n      flip(svg, shape);\r\n    });\r\n    svg.appendChild(g);\r\n  }\r\n\r\n  function setDefaultPosition(shape, x, y) {\r\n    switch (shape.nodeName) {\r\n      case \"rect\":\r\n        if (x > 0) {\r\n          const width = Number(shape.getAttribute(\"width\"));\r\n          const adjustWidth = width > 0 ? x - width / 2 : x;\r\n          shape.setAttribute(\"x\", adjustWidth);\r\n        }\r\n        if (y > 0) {\r\n          const height = Number(shape.getAttribute(\"height\"));\r\n          const adjustHeight = height > 0 ? y - height / 2 : x;\r\n          shape.setAttribute(\"y\", adjustHeight);\r\n        }\r\n        break;\r\n      case \"circle\":\r\n      case \"ellipse\":\r\n        if (x > 0) shape.setAttribute(\"cx\", x);\r\n        if (y > 0) shape.setAttribute(\"cy\", y);\r\n      default:\r\n        if (x > 0) shape.setAttribute(\"x\", x);\r\n        if (y > 0) shape.setAttribute(\"y\", y);\r\n        break;\r\n    }\r\n  }\n\n  function setGroupsMinMax(data, groups) {\r\n    groups.forEach((group) => {\r\n      if (group.min == undefined) group.min = getKeysMin(data, group.cols);\r\n      if (group.max == undefined) group.max = getKeysMax(data, group.cols);\r\n    });\r\n  }\r\n\r\n  function getKeysMin(data, keys) {\r\n    let min = Number.MAX_VALUE;\r\n    for (let i = 1; i < data.length; i++) {\r\n      for (let j = 0; j < keys.length; j++) {\r\n        const keyMin = getKeyMin(data, keys[j]);\r\n        if (min > keyMin) min = keyMin;\r\n      }\r\n    }\r\n    return min;\r\n  }\r\n\r\n  function getKeysMax(data, keys) {\r\n    let max = Number.MIN_VALUE;\r\n    for (let i = 1; i < data.length; i++) {\r\n      for (let j = 0; j < keys.length; j++) {\r\n        const keyMax = getKeyMax(data, keys[j]);\r\n        if (keyMax > max) max = keyMax;\r\n      }\r\n    }\r\n    return max;\r\n  }\r\n\r\n  function getKeyMin(data, key) {\r\n    let min = data[0][key];\r\n    for (let i = 1; i < data.length; i++) {\r\n      min = Math.min(min, data[i][key]);\r\n    }\r\n    return min;\r\n  }\r\n\r\n  function getKeyMax(data, key) {\r\n    let max = data[0][key];\r\n    for (let i = 1; i < data.length; i++) {\r\n      max = Math.max(max, data[i][key]);\r\n    }\r\n    return max;\r\n  }\n\n  class DataSet extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n\r\n    set data(originalData) {\r\n      const normalizeGroups = this.getNormalizeGroups();\r\n      setGroupsMinMax(originalData, normalizeGroups);\r\n      if (this[\"ondataSet\"]) this[\"ondataSet\"]();\r\n      const data = normalize(originalData, normalizeGroups);\r\n      const svg = this.parentElement.querySelector(\"svg\");\r\n      drawChart(svg, this, data, originalData);\r\n      this.parentElement.removeChild(this);\r\n    }\r\n\r\n    getNormalizeGroups() {\r\n      const margin = this.parentElement.margin;\r\n      let h = {\r\n        cols: this.getAttribute(\"hAxis\") ? this.getAttribute(\"hAxis\").split(\",\") : [\"x\"],\r\n        start: margin.left,\r\n        stop: this.parentElement.width - margin.right,\r\n      };\r\n      let hAxis =\r\n        this.parentElement.querySelector(\"bottom-axis\") ?? this.parentElement.querySelector(\"top-axis\");\r\n      if (hAxis) {\r\n        h = {\r\n          ...h,\r\n          min: hAxis.min,\r\n          max: hAxis.max,\r\n        };\r\n      }\r\n      let v = {\r\n        cols: this.getAttribute(\"vAxis\") ? this.getAttribute(\"vAxis\").split(\",\") : [\"y\"],\r\n        start: margin.bottom,\r\n        stop: this.parentElement.height - margin.top,\r\n      };\r\n      let vAxis =\r\n        this.parentElement.querySelector(\"left-axis\") ?? this.parentElement.querySelector(\"right-axis\");\r\n      if (vAxis) {\r\n        v = {\r\n          ...v,\r\n          min: vAxis.min,\r\n          max: vAxis.max,\r\n        };\r\n      }\r\n      return [h, v];\r\n    }\r\n  }\n\n  class CandleStick extends DataSet {\r\n    constructor() {\r\n      super();\r\n      this.adjust();\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n\r\n    adjust() {\r\n      this.appendChild(createSVGElements(\"line\"));\r\n      this.appendChild(createSVGElements(\"rect\"));\r\n      this.ondraw = ({ shape, row }) => {\r\n        switch (shape.tagName) {\r\n          case \"line\":\r\n            shape.setAttribute(\"x1\", row.x + 5);\r\n            shape.setAttribute(\"x2\", row.x + 5);\r\n            shape.setAttribute(\"y1\", row.low);\r\n            shape.setAttribute(\"y2\", row.high);\r\n            shape.setAttribute(\r\n              \"stroke\",\r\n              row.open > row.close ? \"#28A69A\" : \"#EE5355\"\r\n            );\r\n            break;\r\n          case \"rect\":\r\n            shape.setAttribute(\"width\", 10);\r\n            shape.setAttribute(\"height\", Math.abs(row.open - row.close));\r\n            shape.setAttribute(\"x\", row.x);\r\n            shape.setAttribute(\"y\", row.open);\r\n            shape.setAttribute(\r\n              \"fill\",\r\n              row.open > row.close ? \"#28A69A\" : \"#EE5355\"\r\n            );\r\n            break;\r\n        }\r\n      };\r\n      this.axes = [\r\n        { cols: [\"x\"], length: 200, margin: 10 },\r\n        {\r\n          cols: [\"low\", \"open\", \"close\", \"high\"],\r\n          length: 200,\r\n          margin: 10,\r\n        },\r\n      ];\r\n    }\r\n  }\n\n  const WIDTH = 200;\r\n  const HEIGHT = 200;\r\n  const MARGIN = 10;\n\n  function createSVG(width, height) {\r\n    const svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\r\n    svg.setAttribute(\"width\", width);\r\n    svg.setAttribute(\"height\", height);\r\n    svg.setAttribute(\"transform\", \"scale(1,-1)\");\r\n    return svg;\r\n  }\n\n  function drawAxisLine(axis) {\r\n    const g = createSVGElements(\"g\");\r\n    if (!axis.line) return;\r\n    const axisLine = cloneSVGElement(axis.line);\r\n    if (axis.isVertical) {\r\n      axisLine.setAttribute(\"x1\", axis.position);\r\n      axisLine.setAttribute(\"x2\", axis.position);\r\n      axisLine.setAttribute(\"y1\", axis.start);\r\n      axisLine.setAttribute(\"y2\", axis.stop);\r\n    } else {\r\n      axisLine.setAttribute(\"x1\", axis.start);\r\n      axisLine.setAttribute(\"x2\", axis.stop);\r\n      axisLine.setAttribute(\"y1\", axis.position);\r\n      axisLine.setAttribute(\"y2\", axis.position);\r\n    }\r\n\r\n    g.appendChild(axisLine);\r\n    axis.parentElement.svg.appendChild(g);\r\n  }\n\n  function drawTicks(axis) {\r\n    const g = createSVGElements(\"g\");\r\n    axis.ticks.forEach((tick) => {\r\n      if (!axis.tick) return;\r\n      const tl = cloneSVGElement(axis.tick);\r\n      const offset = Number(tl.getAttribute(\"data-offset\") || 0);\r\n      const height = Number(tl.getAttribute(\"height\") || 0);\r\n      const width = Number(tl.getAttribute(\"width\") || 0);\r\n      if (axis.isVertical) {\r\n        tl.setAttribute(\"x\", axis.position - offset);\r\n        tl.setAttribute(\"y\", tick.position - height / 2);\r\n      } else {\r\n        tl.setAttribute(\"x\", tick.position - width / 2);\r\n        tl.setAttribute(\"y\", axis.position - offset);\r\n      }\r\n      g.appendChild(tl);\r\n    });\r\n\r\n    axis.parentElement.svg.appendChild(g);\r\n  }\n\n  function drawGridLines(axis) {\r\n    const g = createSVGElements(\"g\");\r\n    if (axis.grid) {\r\n      axis.ticks.forEach((tick) => {\r\n        if (!axis.grid) return;\r\n        const tl = cloneSVGElement(axis.grid);\r\n        if (axis.isVertical) {\r\n          tl.setAttribute(\"x1\", axis.gridStart);\r\n          tl.setAttribute(\"x2\", axis.gridStop);\r\n          tl.setAttribute(\"y1\", tick.position);\r\n          tl.setAttribute(\"y2\", tick.position);\r\n        } else {\r\n          tl.setAttribute(\"x1\", tick.position);\r\n          tl.setAttribute(\"x2\", tick.position);\r\n          tl.setAttribute(\"y1\", axis.gridStart);\r\n          tl.setAttribute(\"y2\", axis.gridStop);\r\n        }\r\n        g.appendChild(tl);\r\n      });\r\n    }\r\n    axis.parentElement.svg.appendChild(g);\r\n  }\n\n  function drawLabels(axis) {\r\n    const svg = axis.parentElement.svg;\r\n    const g = createSVGElements(\"g\");\r\n    svg.appendChild(g);\r\n    axis.ticks.forEach((tick) => {\r\n      if (!axis.label) return;\r\n      const text = cloneSVGElement(axis.label);\r\n      text.innerHTML = tick.value;\r\n      g.appendChild(text);\r\n      const { width, height } = text.getBoundingClientRect();\r\n      switch (axis.direction) {\r\n        case \"right\":\r\n          text.setAttribute(\"x\", axis.position + 7);\r\n          text.setAttribute(\"y\", tick.position - height / 3);\r\n          break;\r\n        case \"left\":\r\n          text.setAttribute(\"x\", axis.position - width - 7);\r\n          text.setAttribute(\"y\", tick.position - height / 3);\r\n          break;\r\n        case \"top\":\r\n          text.setAttribute(\"x\", tick.position - width / 2);\r\n          text.setAttribute(\"y\", axis.position + 7);\r\n          break;\r\n        case \"bottom\":\r\n          text.setAttribute(\"x\", tick.position - width / 2);\r\n          text.setAttribute(\"y\", axis.position - height);\r\n          break;\r\n        default:\r\n          return;\r\n      }\r\n      flip(svg, text);\r\n    });\r\n  }\n\n  class ChartAxis extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n      this.init();\r\n      this.parentElement.addEventListener(\"created\", (e) => {\r\n        this.render();\r\n      });\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n\r\n    render() {\r\n      this.setTickPositions();\r\n      drawAxisLine(this);\r\n      if (this.ticks.length > 0) {\r\n        drawTicks(this);\r\n        drawLabels(this);\r\n        drawGridLines(this);\r\n      }\r\n    }\r\n\r\n    init() {\r\n      const pE = this.parentElement;\r\n      this.height = parseFloat(pE.getAttribute(\"height\") ?? HEIGHT);\r\n      this.width = parseFloat(pE.getAttribute(\"width\") ?? WIDTH);\r\n      this.margin = {\r\n        top: parseFloat(pE.getAttribute(\"margin-top\") ?? pE.getAttribute(\"margin\") ?? MARGIN),\r\n        bottom: parseFloat(pE.getAttribute(\"margin-bottom\") ?? pE.getAttribute(\"margin\") ?? MARGIN),\r\n        left: parseFloat(pE.getAttribute(\"margin-left\") ?? pE.getAttribute(\"margin\") ?? MARGIN),\r\n        right: parseFloat(pE.getAttribute(\"margin-right\") ?? pE.getAttribute(\"margin\") ?? MARGIN),\r\n      };\r\n      this.min = parseInt(this.getAttribute(\"min\") ?? 0);\r\n      this.max = parseInt(this.getAttribute(\"max\") ?? 0);\r\n      this.label = this.querySelector(\"text\");\r\n      this.grid = this.querySelector(`line[grid-line]`);\r\n      this.line = this.querySelector(\"line[axis-line]\");\r\n      this.tick = this.querySelector(\"rect[axis-tick]\");\r\n    }\r\n\r\n    setTickPositions() {\r\n      this.ticks = [];\r\n      const ticks = parseInt(this.getAttribute(\"ticks\") ?? 0);\r\n      if (ticks <= 0) return;\r\n      const tickSize = Math.round((this.max - this.min) / (ticks - 1));\r\n      let value = this.min;\r\n      let position = this.start;\r\n      while (true) {\r\n        position = ((value - this.min) / (this.max - this.min)) * (this.stop - this.start) + this.start;\r\n        if (position > this.stop) break;\r\n        this.ticks.push({ value, position });\r\n        value += tickSize;\r\n      }\r\n    }\r\n  }\n\n  class LeftAxis extends ChartAxis {\r\n    constructor() {\r\n      super();\r\n      this.start = this.margin.bottom;\r\n      this.stop = this.height - this.margin.top;\r\n      this.position = this.margin.left;\r\n      this.gridStart = this.margin.left;\r\n      this.gridStop = this.width - this.margin.right;\r\n      this.isVertical = true;\r\n      this.direction = \"left\";\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n  }\n\n  class RightAxis extends ChartAxis {\r\n    constructor() {\r\n      super();\r\n      this.start = this.margin.bottom;\r\n      this.stop = this.height - this.margin.top;\r\n      this.position = this.width - this.margin.right;\r\n      this.gridStart = this.margin.left;\r\n      this.gridStop = this.width - this.margin.right;\r\n      this.isVertical = true;\r\n      this.direction = \"right\";\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n  }\n\n  class TopAxis extends ChartAxis {\r\n    constructor() {\r\n      super();\r\n      this.start = this.margin.left;\r\n      this.stop = this.width - this.margin.right;\r\n      this.position = this.height - this.margin.top;\r\n      this.gridStart = this.margin.bottom;\r\n      this.gridStop = this.height - this.margin.top;\r\n      this.isVertical = false;\r\n      this.direction = \"top\";\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n  }\n\n  class BottomAxis extends ChartAxis {\r\n    constructor() {\r\n      super();\r\n      this.start = this.margin.left;\r\n      this.stop = this.width - this.margin.right;\r\n      this.position = this.margin.bottom;\r\n      this.gridStart = this.margin.bottom;\r\n      this.gridStop = this.height - this.margin.top;\r\n      this.isVertical = false;\r\n      this.direction = \"bottom\";\r\n    }\r\n\r\n    connectedCallback() {}\r\n    disconnectedCallback() {}\r\n  }\n\n  class ChartEase extends HTMLElement {\r\n    constructor() {\r\n      super();\r\n      this.setStyles();\r\n      this.height = parseFloat(this.getAttribute(\"height\") ?? HEIGHT);\r\n      this.width = parseFloat(this.getAttribute(\"width\") ?? WIDTH);\r\n      this.margin = {\r\n        top: parseFloat(this.getAttribute(\"margin-top\") ?? this.getAttribute(\"margin\") ?? MARGIN),\r\n        bottom: parseFloat(this.getAttribute(\"margin-bottom\") ?? this.getAttribute(\"margin\") ?? MARGIN),\r\n        left: parseFloat(this.getAttribute(\"margin-left\") ?? this.getAttribute(\"margin\") ?? MARGIN),\r\n        right: parseFloat(this.getAttribute(\"margin-right\") ?? this.getAttribute(\"margin\") ?? MARGIN),\r\n      };\r\n      this.svg = createSVG(this.width, this.height);\r\n      this.appendChild(this.svg);\r\n      this.dispatchEvent(new Event(\"created\"));\r\n    }\r\n\r\n    disconnectedCallback() {}\r\n\r\n    set ondraw(ondraw) {\r\n      this.querySelector(\"data-set\").ondraw = ondraw;\r\n    }\r\n    set data(data) {\r\n      this.querySelector(\"data-set\").data = data;\r\n    }\r\n\r\n    setStyles() {\r\n      this.style.lineHeight = 0;\r\n    }\r\n  }\r\n\r\n  customElements.get(\"left-axis\") ?? customElements.define(\"left-axis\", LeftAxis);\r\n  customElements.get(\"right-axis\") ?? customElements.define(\"right-axis\", RightAxis);\r\n  customElements.get(\"top-axis\") ?? customElements.define(\"top-axis\", TopAxis);\r\n  customElements.get(\"bottom-axis\") ?? customElements.define(\"bottom-axis\", BottomAxis);\r\n\r\n  customElements.get(\"data-set\") ?? customElements.define(\"data-set\", DataSet);\r\n  customElements.get(\"chart-ease\") ?? customElements.define(\"chart-ease\", ChartEase);\r\n  customElements.get(\"candle-stick\") ?? customElements.define(\"candle-stick\", CandleStick);\n\n  return ChartEase;\n\n})();\n//# sourceMappingURL=chart-ease.js.map\n"],"names":["cloneSVGElement","element","newElement","document","createElementNS","tagName","toLowerCase","from","to","Array","attributes","forEach","attr","value","setAttribute","name","style","cssText","copyStyles","children","child","appendChild","createSVGElements","flip","svg","shape","height","getBoundingClientRect","parseFloat","getAttribute","drawChart","dataset","data","originalData","prototype","slice","call","hasAttribute","pathType","path","map","point","index","x","y","join","removeAttribute","loadPathData","drawPath","g","row","ondraw","originalRow","nodeName","width","Number","adjustWidth","adjustHeight","setDefaultPosition","drawPoints","setGroupsMinMax","groups","group","undefined","min","keys","MAX_VALUE","i","length","j","keyMin","getKeyMin","getKeysMin","cols","max","MIN_VALUE","keyMax","getKeyMax","getKeysMax","key","Math","DataSet","HTMLElement","constructor","super","connectedCallback","disconnectedCallback","normalizeGroups","this","getNormalizeGroups","arr","normalizedArr","item","arrKeys","Object","includes","round","num","stop","start","normalizeNumber","normalize","parentElement","querySelector","removeChild","margin","h","split","left","right","hAxis","v","bottom","top","vAxis","MARGIN","ChartAxis","init","addEventListener","e","render","setTickPositions","axis","line","axisLine","isVertical","position","drawAxisLine","ticks","tick","tl","offset","drawTicks","label","text","innerHTML","direction","drawLabels","grid","gridStart","gridStop","drawGridLines","pE","parseInt","tickSize","push","ChartEase","setStyles","createSVG","dispatchEvent","Event","lineHeight","customElements","get","define","adjust","low","high","open","close","abs","axes"],"mappings":"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"}